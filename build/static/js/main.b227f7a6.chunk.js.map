{"version":3,"sources":["Components/Other/chartConfigs.js","Components/Other/tables.js","Components/Index/arps.js","Components/Index/InterfacesTable.js","Components/Images/router.png","Components/Index/topology.js","Components/Index/hsrp.js","Components/Other/dp_neighbors.js","Components/Other/errorComponent.js","Components/Other/jsxCard.js","Components/Other/promises.js","Components/Other/navbar.js","Components/Other/pageLoader.js","Components/Other/navbarError.js","Components/Index/Index-Parent.js","Components/LayerTwo/macAddress.js","Components/LayerTwo/spanTree.js","Components/LayerTwo/trunks.js","Components/LayerTwo/accessPorts.js","Components/LayerTwo/vlans.js","Components/LayerTwo/layerTwo-Parent.js","Components/Environment/cpuUsages.js","Components/Environment/sensors.js","Components/Environment/poe.js","Components/Environment/transceivers.js","Components/Environment/transieverInventory.js","Components/Environment/Env-Parent.js","Components/LayerThree/topology.js","Components/LayerThree/ospf.js","Components/LayerThree/bgp.js","Components/LayerThree/Routing-Parent.js","Components/DMVPN/topology.js","Components/DMVPN/dmvpnData.js","Components/DMVPN/Dmvpn-Parent.js","Components/Config/navbar.js","Components/Config/promises.js","Components/Config/config.js","Components/RibStatus/getRibs.js","Components/RibStatus/ribDiff.js","Components/RibStatus/protocols.js","Components/RibStatus/RIB-Parent.js","Components/Other/login.js","Components/IPSlas/ipslastats.js","Components/IPSlas/topology.js","Components/IPSlas/slatopologies.js","Components/IPSlas/SlaParent.js","Components/Index/interfaceCard.js","Components/InterfaceGraphs/liveInterface.js","App.js","index.js"],"names":["GlobalSpanTreeHtml","data","undefined","Card","bg","Body","Row","Title","className","mode","Col","xl","style","textAlign","require","DataTable","$","Arps","props","tableRef","arpTableRef","React","createRef","table","classname","ref","width","fn","dataTable","ext","errMode","useEffect","current","clear","rows","add","arps","draw","destroy","language","emptyTable","columns","ArpData","InterfaceTable","interfacesTableRef","interfacestable","Object","values","interfaces","fnRowCallback","nRow","aData","map","value","qos","length","interface","html","parseInt","addClass","Math","round","e","console","log","InterfaceData","font","size","strokeWidth","color","nodeFont","options","nodes","shape","image","router","border","background","highlight","layout","randomSeed","improvedLayout","clusterThreshold","hierarchical","enabled","levelSeparation","treeSpacing","edgeMinimization","parentCentralization","direction","sortMethod","shakeTowards","physics","hierarchicalRepulsion","centralGravity","springLength","springConstant","nodeDistance","damping","avoidOverlap","Hsrp","hsrpTableRef","hsrpTopologyRef","hsrpTopology","useRef","hsrp","localIp","entries","forEach","details","i","standby","state","body","edges","update","id","vlanInt","from","to","label","active","HsrpData","push","vip","Network","HsrpTopologyBuild","height","DpNeighbors","cdpTableRef","cdptable","lldpTableRef","lldptable","LldpTableHtml","dpNeighbors","CdpTable","LldpTable","Tabs","defaultActiveKey","Tab","eventKey","title","IsErrorFallback","marginTop","fontWeight","CreateCard","component","FallbackComponent","Login","ip","username","password","Promise","resolve","axios","post","timeout","ApiCheck","setTimeout","create","defaults","Navigation","useState","apiStatus","setApiStatus","a","status","Navbar","expand","Container","fluid","Brand","href","Toggle","Collapse","Nav","localStorage","getItem","fetchingStatus","cpu","mem","PageLoader","serial","model","uptime","software","NavigationFallback","Index","useRecoilState","encytpKey","decrypt","passwordDecrypt","AES","useQuery","toString","enc","Utf8","refetchInterval","isLoading","error","isFetching","dp","MacTable","macTableRef","macTable","macs","MacAddressData","SpanTable","spanTableRef","spanTable","span","SpanTableData","instance","Trunks","trunksTableRef","trunkstable","ports","TrunkData","AccessPorts","accesssTableRef","accessstable","AccesPortData","Vlans","vlanTableRef","vlantable","VlanData","vlans","LayerTwo","bridgeGlobalTble","response","globalSpan","hasOwnProperty","key","trunks","access","mac_addresses","CpuUsage","cpuMemCss","proccessRef","memRef","memTable","proccessTable","CpuTableHtml","fontSize","parseFloat","CpuProcessData","MemoryData","maxValue","needleColor","startColor","segments","ringWidth","textColor","endColor","Sensors","envTableRef","env","includes","PoeConnections","poeTableRef","poeTable","poeprops","poe","PoeData","Transceivers","transceiverTableRef","transceiverOpertable","transceivers","replace","TransieverData","TransceiversInv","inventoryTransceiverTableRef","inventorytable","InvTransieverData","Environment","arrowEnabled","Ospf","ospfTableRef","ospfIntsTableRef","ospfTopologyRef","ospfTopology","ospfIntTable","topology","neighbors","arrows","OspfData","neighbor","OspfTopologyBuild","Bgp","bgpTableRef","bgpTopologyRef","bgpTopology","bgpTable","routerId","localAs","prefixes","BgpTopologyBuild","lg","Routing","ospf","ospfInts","bgp","bgpDetails","Hubfont","DmvpnData","dmvpnTopologyRef","dmvpnTableRef","dmvpnTopology","dmvpnTable","dmvpnInterfacesTableRef","dmvpnInterfacestable","DmvpnInterfacesTableHtml","tunnelInterfacesTableRef","tunnelInterfacestable","TunnelInterfacesTableHtml","dmvpnHubsTableRef","dmvpnHubs","DmvpnHubsTableHtml","nbmaTableRef","nmbaIps","NbmaLocationTableHtml","dmvpn","dmvpnInts","hubs","locations","peers","peerNbma","peerTunnel","attrb","some","hubNbma","spookeOrHub","DmvpnTopologyBuild","Dmvpn","location","routing","RestConfig","setUpdate","updateModel","loading","updateLoading","url","errorRef","xpathHistory","pythonPath","pythonStrPath","leafs","parentKey","config","avaiableUrls","previousSelection","then","JSON","parse","parent","catch","previousUrl","pop","queryData","uri","alert","handleSubmit","preventDefault","handleChange","target","onSubmit","name","onChange","option","type","marginBottom","onClick","onclick","display","justifyContent","index","marginRight","nextPath","nextUrl","indexOf","urlWithFilter","encodeURIComponent","buildUri","stringify","clssName","RibInfo","ipv4RibTableRef","ipv6RibTableRef","ipv4IntTable","ipv6IntTable","Ipv6RibTableHtml","routes","Ipv4Ribs","Ipv6Ribs","RibDiff","ribDiffEntries","plusEntriesTable","ribs","RibDiffData","RoutingProtocols","routingProtocolsRef","routingProtocolsTable","RoutingProtocolData","protocols","RibIndex","ribsEntries","flaps","DeviceAuth","encrypt","setloading","setIp","setUserNaMe","setPassword","port","setPort","isAuth","setAuth","evt","encryptPassword","setItem","pathname","alignItems","placeholder","required","SlaStats","slaTableRef","slaTable","slas","IpSlaData","BuildSlaTopologies","slaTopologyRef","slaTopology","sla","IpSlaTopologyBuild","IpSlas","InterfaceCard","interfacesChart","interfacesRef","updatedChart","chart","responseTwo","time","Date","datasets","dataset","labels","shift","getSeconds","UpdateChart","ctx","Chart","register","LineController","LineElement","PointElement","LinearScale","CategoryScale","Legend","responsive","animation","plugins","legend","position","scales","y","min","grid","ticks","stepSize","y1","x","borderColor","text","backgroundColor","fill","tension","yAxisID","InitialChartBuild","getContext","div","speed","ipv4","description","mtu","split","LiveInterfaces","atom","default","queryClient","QueryClient","App","path","QueryClientProvider","client","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b227f7a6.chunk.js","sourcesContent":["import {Chart, LineController, CategoryScale, LineElement, PointElement, LinearScale, Title, Legend, BarController, BarElement } from \"chart.js\";\nimport Card from \"react-bootstrap/Card\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport \"datatables.net-dt/js/dataTables.dataTables\"\nimport \"datatables.net-dt/css/jquery.dataTables.min.css\"\nconst $ = require('jquery');\n$.DataTable = require('datatables.net');\n\n\nexport function CpuChartConfig() {\n\n    const config = {\n        responsive: true,\n        animation: true,\n        plugins: {\n        legend: {\n        display: true,\n        labels: {color:'white'},\n        position: 'top'\n              },\n            },\n        scales: {\n            y: {\n            min: 0,\n            display: true,\n            position: 'right',\n            grid: {\n                    },\n                ticks: {\n                    stepSize: 1,\n                    color: \"yellow\"\n                }\n            },\n             x: {\n             grid: {\n                    borderColor: 'white',\n             },\n                ticks: {\n                    stepSize: 1,\n                    color: \"white\",\n                 },\n                title: {\n                    display: true,\n                    text: 'Seconds',\n                    color: \"white\"\n    \n                }\n            }\n        }\n    };\n\n    return config\n}\n\nexport function ChartConfig() {\n\n    const config = {\n        responsive: true,\n        animation: true,\n        plugins: {\n        legend: {\n        display: true,\n        labels: {color:'white'},\n        position: 'top'\n              },\n            },\n        scales: {\n            y: {\n            min: 0,\n            display: true,\n            position: 'right',\n            grid: {\n                    },\n                ticks: {\n                    stepSize: 1,\n                    color: \"yellow\"\n                }\n            },\n            y1: {\n                min: 0,\n                display: true,\n                position: 'left',\n                grid: {\n                        },\n                    ticks: {\n                        stepSize: 1,\n                        color: \"white\"\n                    }\n                },\n             x: {\n             grid: {\n                    borderColor: 'white',\n             },\n                ticks: {\n                    stepSize: 1,\n                    color: \"white\",\n                 },\n                title: {\n                    display: true,\n                    text: 'Seconds',\n                    color: \"white\"\n    \n                }\n            }\n        }\n    };\n\n    return config\n}\n\nexport function BarChart(ctx, inbound, drops){\n    Chart.register(LineController, LineElement, PointElement, LinearScale, CategoryScale, Title, Legend, BarController, BarElement);\n    var chart = new Chart(ctx, {\n    type: 'bar',\n    options: {\n        scales: {\n          y: {\n            beginAtZero: true,\n            grid: {\n            },\n        ticks: {\n            color: \"white\"\n            },\n          },\n          x: {\n            grid: {\n                   borderColor: 'white',\n            },\n               ticks: {\n                   stepSize: 1,\n                   color: \"white\",\n                },\n               title: {\n                   display: false,\n                   text: 'Mbps',\n                   color: \"white\"\n   \n               }\n           }\n        }\n      },\n    data: {\n        labels: ['Mbps'],\n        datasets: [{\n            label: ['Mbps'],\n            data: [inbound],\n            backgroundColor: [\n                'rgba(144, 198, 149, 1)',\n\n            ],\n            borderColor: [\n                'rgba(30, 130, 76, 1)',\n            ],\n            borderWidth: 1,\n            barThickness: 80\n        }]\n    },\n    })\n\nreturn chart\n\n}\n\n\nexport function BarChartUpdate(chart, data){\n\n    chart.data.labels.pop();\n    chart.data.labels.push('Rate');\n    chart.data.datasets.forEach((dataset) => {\n        dataset.data.pop();\n        dataset.data.push(data);\n    })\n    \n    return chart\n}\n\n\nexport function InitialChartBuild(ctx, response, responseTwo){\n\n    Chart.register(LineController, LineElement, PointElement, LinearScale, CategoryScale, Title, Legend);\n    let time = new Date()\n\n    let chart = new Chart(ctx, {\n    type: 'line',\n    options: ChartConfig(),\n    data: {\n    labels: [time.getSeconds()],\n    datasets: [{\n        label: 'Mbps Out',\n        borderColor: 'yellow',\n        backgroundColor: 'yellow',\n        data: [parseInt(response) / 1000],\n        fill: false,\n        tension: .5,\n        yAxisID: 'y'},\n        \n        {\n        label: 'Mbps In',\n        borderColor: 'white',\n        backgroundColor: 'white',\n        data: [parseInt(responseTwo) / 1000],\n        fill: false,\n        tension: .5,\n        yAxisID: 'y1'}],\n        }\n        });    \n    return chart\n}\n\nexport function InitialCpuChartBuild(ctx, response){\n\n    Chart.register(LineController, LineElement, PointElement, LinearScale, CategoryScale, Title, Legend);\n    let time = new Date()\n\n    let chart = new Chart(ctx, {\n    type: 'line',\n    options: CpuChartConfig(),\n    data: {\n    labels: [time.getSeconds()],\n    datasets: [{\n        label: '5Sec',\n        borderColor: 'yellow',\n        backgroundColor: 'yellow',\n        data: [response],\n        fill: true,\n        tension: .5,}],\n        }\n        });    \n\n    return chart\n}\n\n\nexport function UpdateChart(chart, response, responseTwo) {\n\n    let time = new Date()\n    chart.data.datasets.forEach((dataset, index) => {\n    if (dataset.data.length >= 10){\n        if(index === 0){\n            chart.data.labels.shift();\n            chart.data.labels.push(time.getSeconds());\n            dataset.data.shift();\n            dataset.data.push(parseInt(response));\n        }\n        else{\n            dataset.data.shift();\n            dataset.data.push(parseInt(responseTwo));\n        }\n    }\n    else{\n        if(index === 0){\n            chart.data.labels.push(time.getSeconds());\n            dataset.data.push(parseInt(response));\n        }\n        else{\n            dataset.data.push(parseInt(responseTwo));\n\n            }\n        }\n    });\n    return chart\n    \n}\n\nexport function UpdateCpuChart(chart, response) {\n\n    let time = new Date()\n    chart.data.datasets.forEach((dataset) => {\n    if (dataset.data.length >= 10){\n        chart.data.labels.shift();\n        chart.data.labels.push(time.getSeconds());\n        dataset.data.shift();\n        dataset.data.push(response);\n    }\n    else{\n        chart.data.labels.push(time.getSeconds());\n        dataset.data.push(response);\n        }\n    });\n\n    return chart\n    \n}\n\nexport function ArpTableHtml(tableRef) {\n\n    return   <div classname=\"table-responsive\">\n                            <table ref={tableRef} className=\"table  table-dark row-text\" style={{width: '100%'}}>\n                                <thead classname=\"thead-light\">\n                                    <tr>\n                                        <th >Address</th>\n                                        <th >Encap Type</th>\n                                        <th >Mac</th>\n                                        <th >Mode</th>\n                                        <th >Time</th>\n                                        <th >Link Type</th>\n                                        <th >Vrf</th>\n                                        <th >Interface</th> \n                                    </tr>\n                                </thead>                               \n                            </table>\n                        </div>\n\n    }\n\n\nexport function EnvTableHtml(tableRef) {\n\n    return  <div classname=\"table-responsive\">\n                <table ref={tableRef} className=\"table table-dark row-text\" style={{width: '100%'}}>\n                    <thead classname=\"thead-light\">\n                        <tr>\n                            <th >Name</th>\n                            <th >Location</th>\n                            <th >State</th>\n                            <th >Current</th>\n                            <th >Meas.</th>\n                        </tr>\n                    </thead>                               \n                </table>\n            </div>\n            \n    }\n\n\nexport function CpuTableHtml(tableRef) {\n\n    return <div classname=\"table-responsive\">\n                        <table ref={tableRef} className=\"table table-dark row-text\" style={{width: '100%'}}>\n                            <thead classname=\"thead-light\">\n                                <tr>\n                                    <th >Name</th>\n                                    <th >Run Time</th>\n                                    <th >Avg-run-time</th>\n                                    <th >Five-seconds</th>\n                                    <th >One-minute</th>\n                                    <th >Five-minutes</th>        \n                                </tr>\n                            </thead>                               \n                        </table>\n                    </div>\n    }\n\nexport function MacTableHtml(tableRef) {\n\n        return <div classname=\"table-responsive\">\n                            <table ref={tableRef} className=\"table table-dark row-text\" style={{width: '100%'}}>\n                                <thead classname=\"thead-light\">\n                                    <tr>\n                                        <th >Vlan</th>\n                                        <th >MAC</th>\n                                        <th >Type</th>\n                                        <th >Port</th>       \n                                    </tr>\n                                </thead>                               \n                            </table>\n                        </div>\n        }\n    \n\nexport function MemTableHtml(tableRef) {\n\n    return  <div classname=\"table-responsive\">\n                        <table ref={tableRef} className=\"table table-dark row-text\"  style={{width: '100%'}}>\n                            <thead classname=\"thead-light\">\n                                <tr>\n                                    <th >Total</th>\n                                    <th >Used</th>\n                                    <th >Used%</th>\n                                    <th >Free</th>\n                                    <th >Free%</th>\n                                    <th >Used Avl.</th>\n                                    <th >Used Avl%</th>\n                                </tr>\n                            </thead>                               \n                        </table>\n                    </div>\n    }\n\nexport function OpsfTableHtml(tableRef) {\n\n        return  <div classname=\"table-responsive\">\n                    <table ref={tableRef} className=\"table table-dark row-text\"  style={{width: '100%'}}>\n                        <thead classname=\"thead-light\">\n                            <tr>\n                                <th >Neighbor ID</th>\n                                <th >Address</th>\n                                <th >State</th>\n                                <th >DR</th>\n                                <th >bdr</th>\n                            </tr>\n                        </thead>                               \n                    </table>\n                </div>\n        }\n\nexport function HsrpTableHtml(tableRef) {\n\n            return  <div classname=\"table-responsive\">\n                        <table ref={tableRef} className=\"table table-dark row-text\"  style={{width: '100%'}}>\n                            <thead classname=\"thead-light\">\n                                <tr>\n                                    <th >Vlan</th>\n                                    <th >Group</th>\n                                    <th >Priority</th>\n                                    <th >State</th>\n                                    <th >Standby</th>\n                                    <th >VIP</th>\n                                </tr>\n                            </thead>                               \n                        </table>\n                    </div>\n            }\n\nexport function DmvpnTableHtml(tableRef) {\n\n\n    return  <div classname=\"table-responsive\">\n                <table ref={tableRef} className=\"table table-dark row-text\"  style={{width: '100%'}}>\n                    <thead classname=\"thead-light\">\n                        <tr>\n                            <th >Peer NBMA</th>\n                            <th >Peer Tunnel</th>                    \n                            <th >State</th>\n                            <th >Up Time</th>\n                            <th >Attribute</th>\n                        </tr>\n                    </thead>                               \n                </table>\n            </div>\n    }\n\n                \nexport function OpsfIntsTableHtml(tableRef) {\n\n            return  <div classname=\"table-responsive\">\n                        <table ref={tableRef} className=\"table table-dark row-text\"  style={{width: '100%'}}>\n                            <thead classname=\"thead-light\">\n                                <tr>\n                                    <th >Name</th>\n                                    <th >Net Type</th>\n                                    <th >Area</th>\n                                    <th >BDR</th>\n                                    <th >DR</th>\n                                    <th >Cost</th>\n                                    <th >Dead Int.</th>\n                                    <th >Hello In.</th>\n                                    <th >Hello Timer</th>\n                                    <th >Priority</th>\n                                    <th >Neighbor ID</th>\n                                    <th >Address</th>\n                                    <th >State</th>\n                                    <th >DR</th>\n                                    <th >bdr</th>\n                                </tr>\n                            </thead>                               \n                        </table>\n                    </div>\n            }\n\nexport function BgpTableHtml(tableRef) {\n\n    return  <div classname=\"table-responsive\">\n                <table ref={tableRef} className=\"table table-dark row-text\"  style={{width: '100%'}}>\n                    <thead classname=\"thead-light\">\n                        <tr>\n                            <th >ID</th>\n                            <th >Remote AS</th>\n                            <th >Uptime</th>\n                            <th >State</th>\n                            <th >Prefixes Rec.</th>\n                            <th >Prefixes Sent</th>\n                            <th >Installed Prefixes</th>\n                            <th >Local Port</th>\n                            <th >Remote Port</th>\n                        </tr>\n                    </thead>                               \n                </table>\n            </div>\n    }\n\nexport function SpanTreeHtml(tableRef) {\n\n        return  <div classname=\"table-responsive\">\n                    <table ref={tableRef} className=\"table table-dark row-text\" style={{height: 175, width: '100%'}}>\n                        <thead classname=\"thead-light\">\n                            <tr>\n                                <th >Name</th>\n                                <th >Cost</th>\n                                <th >Port Priority</th>\n                                <th >Role</th>\n                                <th >State</th>\n                                <th >Fwd. Transistion</th>\n                                <th >Link Type</th>\n                            </tr>\n                        </thead>                               \n                    </table>\n                </div>\n        }\n\nexport function GlobalSpanTreeHtml(data) {\n\n    if(data !== undefined){\n            return  <Card bg={\"dark\"}>\n                    <Card.Body>\n                        <Row>\n                         <Card.Title className=\"mb-3\">Mode: {data.mode}</Card.Title>\n                        </Row>\n                        <Row>\n                            <Col xl={3}>\n                                {data['bridge-assurance'] ? <p className=\"card-text\">Bridge Assurance:</p> : <div/>}\n                                {data['loop-guard'] ? <p className=\"card-text\">Loop Guard:</p> : <div/>}\n                                {data['bpdu-guard'] ? <p className=\"card-text\">BPDU Guard:</p> : <div/>}\n                                {data['etherchannel-misconfig-guard'] ? <p className=\"card-text\">EtherChannel Mis.</p> : <div/>}\n                            </Col>\n                            <Col xl={2}>\n                                <p className=\"card-text\">{data['bridge-assurance'][0] === null ? 'Disabled' : data['bridge-assurance']}</p>\n                                <p className=\"card-text\">{data['loop-guard'][0] === null ? 'Disabled' : data['loop-guard']}</p>\n                                <p className=\"card-text\">{data['bpdu-guard'] && data['bpdu-guard'][0] === null ? 'Disabled' : data['bpdu-guard']}</p>\n                                <p className=\"card-text\">{data['etherchannel-misconfig-guard'][0] === null ? 'Disabled' : data['etherchannel-misconfig-guard']}</p>\n                            </Col>\n                            <Col xl={8}/>\n                        </Row>\n                        </Card.Body>\n                    </Card>\n            }\n            else{\n                return <h4 style={{textAlign: 'center'}}>Spanning Tree Not Enabled</h4>\n            }\n            }\n\n            \nexport function CdpTableHtml(tableRef) {\n\n    return  <div classname=\"table-responsive\">\n                <table ref={tableRef} className=\"table table-dark row-text\" style={{width: '100%'}}>\n                    <thead>\n                        <tr>\n                            <th >Device</th>\n                            <th >Platform</th>\n                            <th >Remote-Port</th>\n                            <th >Duplex</th>\n                            <th >Capability Avl.</th>\n                            <th >Mgmt IP</th>\n                            <th >IP</th>\n                            <th >Local Int.</th>\n                        </tr>\n                    </thead>                               \n                </table>\n            </div>\n    }\n\nexport function LldpTableHtml(tableRef) {\n\n    return  <div classname=\"table-responsive\">\n                <table ref={tableRef} className=\"table table-dark row-text\" style={{width: '100%'}}>\n                    <thead>\n                        <tr>\n                            <th >Device</th>\n                            <th >Local Int.</th>\n                            <th >TTL</th>\n                            <th >Remote Int.</th>                             \n                        </tr>\n                    </thead>                               \n                </table>\n            </div>\n                \n    }\n\nexport function VlanTableHtml(tableRef) {\n\n    return  <div className=\"col-12\">\n                <div classname=\"table-responsive\">\n                        <table ref={tableRef} className=\"table table-dark row-text\" style={{width: '100%'}}>\n                            <thead>\n                                <tr style={{textAlign: 'center'}}>\n                                    <th >Name</th>\n                                    <th >ID Int.</th>\n                                    <th >Status</th>\n                                    <th >Interfaces</th>                             \n                                </tr>\n                            </thead>                               \n                        </table>\n                    </div>\n                </div>\n                \n    }\n\nexport function TrunkTableHtml(tableRef) {\n    return  <div className=\"col-12\">\n                <div classname=\"table-responsive\">\n                        <table ref={tableRef} className=\"table table-dark\" style={{width: '100%'}}>\n                            <thead>\n                                <tr style={{textAlign: 'center'}}>\n                                    <th >Interface</th>\n                                    <th >vlans</th>\n                                    <th >Status</th>\n                                    <th >MbpsOut</th>\n                                    <th >MbpsIn</th>                            \n                                </tr>\n                            </thead>                               \n                        </table>\n                    </div>\n                </div>\n                \n    }\n \nexport function AccessTableHtml(tableRef) {\n    return  <div classname=\"table-responsive\">\n                <table ref={tableRef} className=\"table table-dark row-text\" style={{width: '100%'}}>\n                    <thead>\n                        <tr style={{textAlign: 'center'}}>\n                            <th >Interface</th>\n                            <th >vlan</th>\n                            <th >Status</th>\n                            <th >MbpsOut</th>\n                            <th >MbpsIn</th>                           \n                        </tr>\n                    </thead>                               \n                </table>\n            </div>\n                \n    }\n \nexport function InterfacesTableHtml(tableRef) {\n        return  <div classname=\"table-responsive\">\n                    <table ref={tableRef} className=\"table table-dark\" style={{width: '100%'}}>\n                        <thead>\n                            <tr>\n                                <th >Interface</th>\n                                <th >Status</th>\n                                <th >Description</th>\n                                <th >IP</th>\n                                <th >Mask</th>\n                                <th >Speed (Mbps)</th>\n                                <th >Qos Allocation</th>\n                                <th >Trans Band</th> \n                                <th >RecieveBand</th>\n                                <th >Qos Policy</th>\n                                <th >Policy Direction</th>                          \n                            </tr>\n                        </thead>                               \n                    </table>\n                </div>\n                    \n        }\n\nexport function DmvpnHubTableHtml(tableRef) {\n            return  <div classname=\"table-responsive\">\n                        <table ref={tableRef} className=\"table table-dark\" style={{width: '100%'}}>\n                            <thead>\n                                <tr>\n                                    <th >Interface</th>\n                                    <th >Status</th>\n                                    <th >Priority</th>                                                          \n                                </tr>\n                            </thead>                               \n                        </table>\n                    </div>\n                        \n            }\n    \n\nexport function TunnelInterfacesTableHtml(tableRef) {\n            return  <div classname=\"table-responsive\">\n                        <table ref={tableRef} className=\"table table-dark\" style={{width: '100%'}}>\n                            <thead>\n                                <tr>\n                                    <th >Interface</th>\n                                    <th >Status</th>\n                                    <th >Description</th>\n                                    <th >IP</th>\n                                    <th >Mask</th>\n                                    <th >Speed</th>\n                                    <th >Trans Band</th> \n                                    <th >RecieveBand</th>                       \n                                </tr>\n                            </thead>                               \n                        </table>\n                    </div>\n                        \n            }\n\nexport function DmvpnHubsTableHtml(tableRef) {\n    return  <div classname=\"table-responsive\">\n                <table ref={tableRef} className=\"table table-dark\" style={{width: '100%'}}>\n                    <thead>\n                        <tr>\n                            <th >NBMA</th>\n                            <th >IP</th>            \n                        </tr>\n                    </thead>                               \n                </table>\n            </div>\n                \n    }\n\nexport function DmvpnInterfacesTableHtml(tableRef) {\n    return  <div classname=\"table-responsive\">\n                <table ref={tableRef} className=\"table table-dark\" style={{width: '100%'}}>\n                    <thead>\n                        <tr>\n                            <th >Interface</th>\n                            <th >Source</th>\n                            <th >MTU</th>\n                            <th >MSS</th>\n                            <th >Mode</th>\n                            <th >Authentication</th>\n                            <th >HoldTime</th> \n                            <th >Protection</th>\n                            <th >Network ID</th>                       \n                        </tr>\n                    </thead>                               \n                </table>\n            </div>\n                \n    }\n\n\n\nexport function NbmaLocationTableHtml(tableRef) {\n    return  <div classname=\"table-responsive\">\n                <table ref={tableRef} className=\"table table-dark\" style={{width: '100%'}}>\n                    <thead>\n                        <tr>\n                            <th >IP</th>\n                            <th >Country Code</th>\n                            <th >City</th>\n                            <th >Contenent Code</th>\n                            <th >Latitude</th>\n                            <th >Longitude</th>\n                            <th >Organization</th>\n                            <th >ASN</th> \n                            <th >TimeZone</th>\n                        </tr>\n                    </thead>                               \n                </table>\n            </div>\n                \n    }\n\nexport function Ipv4RibTableHtml(tableRef) {\n\nreturn <div classname=\"table-responsive\">\n    <table ref={tableRef} className=\"table table-dark\" style={{width: '100%'}}>\n        <thead >\n            <tr id='headr'>\n                <th >Name</th>\n                <th >Address-Family</th>\n                <th >Destination</th>\n                <th >Prefrence</th>\n                <th >Metric</th>\n                <th >Nex-Hop</th>\n                <th >Out Interface</th>\n                <th >Is Active</th>\n                <th >Source Protocol</th>\n            </tr>\n        </thead>\n    </table>\n</div>\n}\n\nexport function Ipv6RibTableHtml(tableRef) {\n\n    return <div classname=\"table-responsive\">\n                <table ref={tableRef} className=\"table table-dark\" style={{width: '100%'}}>\n                    <thead>\n                        <tr>\n                            <th >Name</th>\n                            <th >Address-Family</th>\n                            <th >Destination</th>\n                            <th >Prefrence</th>\n                            <th >Metric</th>\n                            <th >Nex-Hop</th>\n                            <th >Out Interface</th>\n                            <th >Is Active</th>\n                            <th >Source Protocol</th>\n                        </tr>\n                    </thead>\n                </table>\n            </div>\n}\n\nexport function PlusRibEntriesTableHtml(tableRef) {\n\n    return <div classname=\"table-responsive\">\n                <table ref={tableRef} className=\"table table-dark\" style={{width: '100%'}}>\n                    <thead>\n                        <tr>\n                            <th >Destination</th>\n                            <th >Nex-Hop</th>\n                            <th >Out Interface</th>\n                            <th >Source Protocol</th>\n                            <th >TimeStamp</th>\n                        </tr>\n                    </thead>\n                </table>\n            </div>\n}\n\n\nexport function ProtocolsTableHtml(tableRef) {\n\n    return  <div classname=\"table-responsive\">\n                <table ref={tableRef} className=\"table table-dark\" style={{width: '100%'}}>\n                    <thead>\n                        <tr>\n                            <th >Protocol</th>\n                            <th >ID</th>\n                            <th >Name</th>\n                            <th >Type</th>\n                            <th >Interfaces</th>\n                        </tr>\n                    </thead>\n                </table>\n            </div>\n}\n\nexport function PoeTableHtml(tableRef) {\n\n    return  <div classname=\"table-responsive\">\n                <table ref={tableRef} className=\"table table-dark\" style={{width: '100%'}}>\n                    <thead>\n                        <tr>\n                            <th >Interface</th>\n                            <th >Poe Enabled</th>\n                            <th >Consumed Power</th>\n                            <th >PD Class</th>\n                        </tr>\n                    </thead>\n                </table>\n            </div>\n}\n\nexport function SlaTableHtml(tableRef) {\n\n    return  <div classname=\"table-responsive\">\n                <table ref={tableRef} className=\"table table-dark\" style={{width: '100%'}}>\n                    <thead>\n                        <tr>\n                            <th >SLA ID</th>\n                            <th >Start Time</th>\n                            <th >SLA Type</th>\n                            <th >Latest Result</th>\n                            <th >Success</th>\n                            <th >Failure</th>\n                            <th >RTT</th>\n                            <th >TTL</th>\n                        </tr>\n                    </thead>\n                </table>\n            </div>\n}\n\nexport function TransceiverTableHtml(tableRef) {\n\n    return  <div classname=\"table-responsive\">\n                <table ref={tableRef} className=\"table table-dark\" style={{width: '100%'}}>\n                    <thead>\n                        <tr>\n                            <th >Interface</th>\n                            <th >IsFault</th>\n                            <th >Temp</th>\n                            <th >Connector Type</th>\n                            <th >Speed</th>\n                            <th >Power out</th>\n                            <th >Power In</th>\n                            <th >Laser Bias</th>\n                        </tr>\n                    </thead>\n                </table>\n            </div>\n}\n\n\n\nexport function InventoryTransceiverTableHtml(tableRef) {\n\n    return  <div classname=\"table-responsive\">\n                <table ref={tableRef} className=\"table table-dark\" style={{width: '100%'}}>\n                    <thead>\n                        <tr>\n                            <th >Interfaces</th>\n                            <th >Serial</th>\n                            <th >Connector Type</th>\n                            <th >Vender</th>\n                        </tr>\n                    </thead>\n                </table>\n            </div>\n}\n\n\n\n\n\n\n\n\n\n        \n    \n","\r\n\r\nconst $ = require('jquery');\r\n$.DataTable = require('datatables.net');\r\n\r\nexport function CdpTable(ref, data){\r\n\r\n    try{\r\n        $(ref).DataTable({\r\n        language: {\r\n            emptyTable: \"No CDP Neighbors\"\r\n        },\r\n        data: data,\r\n        columns:  [\r\n            { data: 'device-name' },\r\n            { data: 'platform-name' },\r\n            { data: 'port-id' },\r\n            { data: 'duplex' },\r\n            { data: 'capability' },\r\n            { data: 'mgmt-address' },\r\n            { data: 'ip-address' },\r\n            { data: 'local-intf-name' }\r\n        ],\r\n    \r\n        fnRowCallback: function (nRow, aData) {\r\n            \r\n            try{\r\n                if(aData['duplex'] === 'cdp-full-duplex-mismatch'){\r\n                    $(nRow).addClass('env-row-text-warn blinking')}\r\n                \r\n              }\r\n            catch(e){\r\n              console.log(e)\r\n            }\r\n          }});\r\n    }\r\n    catch{}\r\n\r\n    return ref\r\n\r\n}\r\n\r\nexport function LldpTable(ref, data){\r\n\r\n    try{\r\n        $(ref).DataTable({\r\n            language: {\r\n            emptyTable: \"No LLDP Neighbors\"\r\n            },\r\n            data: data,\r\n            columns:  [\r\n            { data: 'device-id' },\r\n            { data: 'local-interface' },\r\n            { data: 'ttl' },\r\n            { data: 'connecting-interface' }\r\n        ]});\r\n        }\r\n    catch{}\r\n\r\n    return ref\r\n\r\n}\r\n\r\nexport function InterfaceData(ref, data){\r\n\r\n    try{\r\n          $(ref).DataTable({\r\n            data: Object.values(data),\r\n            language: {\r\n              emptyTable: \"No Interfaces Found\"\r\n            },\r\n            columns:  [\r\n              { data: 'data.name'},\r\n              { data: 'data.oper-status'},\r\n              { data: 'data.description' },\r\n              { data: 'data.ipv4' },\r\n              { data: 'data.ipv4-subnet-mask'},\r\n              { data: 'data.speed'},\r\n              { data: 'qos.allocation'},\r\n              { data: 'data.statistics.tx-kbps'},\r\n              { data: 'data.statistics.rx-kbps'},\r\n              { data: 'qos.interface_policy'},\r\n              { data: 'qos.direction'}\r\n          ],\r\n            \r\n          fnRowCallback: function (nRow, aData) {\r\n              \r\n              try{\r\n                \r\n                  Object.values(data).map(value => {\r\n                      if(value.qos.length > 1 && value.interface === aData['data']['name']){\r\n                        $('td:eq(6)', nRow).html('Mult. Allocations. See Qos Tab')\r\n                      }\r\n                      return ''\r\n                  })\r\n  \r\n                  if(parseInt(aData['data']['statistics']['tx-kbps']) > parseInt(aData['qos']['allocation']) ){\r\n                      $(nRow).addClass('env-row-text-warn blinking')\r\n                      }\r\n                  else if(parseInt(aData['data']['statistics']['tx-kbps']) < parseInt(aData['qos']['allocation']) ){\r\n                      $('td:eq(6)', nRow).addClass('env-row-text')\r\n                      }\r\n  \r\n                  $('td:eq(5)', nRow).html(Math.round(aData['data']['speed'] / 1000000000) * 1000 )\r\n                  $('td:eq(5)', nRow).addClass()\r\n                  \r\n                }\r\n              catch(e){console.log(e)}\r\n          }});\r\n        }\r\n        catch{}\r\n\r\n        return ref\r\n\r\n}\r\n\r\nexport function ArpData(ref, data){\r\n\r\n    try{\r\n        $(ref).DataTable({\r\n          data: data,\r\n          language: {\r\n            emptyTable: \"No ARP Entries\"\r\n          },\r\n          columns:  [\r\n            { data: 'address' },\r\n            { data: 'enctype' },\r\n            { data: 'hardware' },\r\n            { data: 'mode' },\r\n            { data: 'time' },\r\n            { data: 'type' },\r\n            { data: 'vrf' },\r\n            { data: 'interface' }\r\n        ]});\r\n      }\r\n    catch{}\r\n\r\n    return ref\r\n}\r\n\r\nexport function HsrpData(ref, data){\r\n\r\n    try{\r\n        $(ref).DataTable({\r\n          data: data,\r\n          language: {\r\n            emptyTable: \"No HSRP Interfaces\"\r\n          },\r\n          columns:  [\r\n            { data: 'vlanInt' },\r\n            { data: 'group' },\r\n            { data: 'priority' },\r\n            { data: 'state' },\r\n            { data: 'standby' },\r\n            { data: 'vip' }\r\n        ],\r\n          \r\n        fnRowCallback: function (nRow, aData) {\r\n            \r\n            try{\r\n                if(aData['state'] === 'Active'){\r\n                  $('td:eq(3)', nRow).addClass('env-row-text')\r\n                  $('td:eq(4)', nRow).addClass('env-row-text')\r\n                }\r\n              \r\n                if(aData['standby'] === 'unknown' || aData['state'] === 'Init'){\r\n                  $(nRow).addClass('env-row-text-warn blinking')\r\n                }\r\n              }\r\n            catch(e){\r\n              console.log(e)\r\n            }\r\n          }});\r\n      }\r\n    catch{}\r\n\r\n    return ref\r\n\r\n}\r\n\r\nexport function OspfData(ref, data){\r\n\r\n    try{\r\n        $(ref).DataTable({\r\n            data: data\r\n            ,language: {\r\n            emptyTable: \"No OSPF Interfaces Found\"\r\n            },\r\n            columns:  [\r\n            { data: 'name' },\r\n            { data: 'network-type' },\r\n            { data: 'area' },\r\n            { data: 'bdr' },\r\n            { data: 'dr' },\r\n            { data: 'cost' },\r\n            { data: 'dead-interval' },\r\n            { data: 'hello-interval' },\r\n            { data: 'hello-timer' },\r\n            { data: 'priority' },\r\n            { data: 'neighbor-state.neighbor-id' },\r\n            { data: 'neighbor-state.address' },\r\n            { data: 'neighbor-state.state' },\r\n            { data: 'neighbor-state.dr' },\r\n            { data: 'neighbor-state.bdr' },\r\n        ],\r\n        fnRowCallback: function (nRow, aData) {\r\n            try{\r\n                if(aData['neighbor-states']['state'] === 'ospf-nbr-full' || aData['neighbor-state']['state'] === 'ospf-nbr-two-way'){\r\n                        $('td:eq(12)', nRow).addClass('env-row-text')\r\n                        }\r\n                else {\r\n                    $(nRow).addClass('env-row-text-warn blinking')\r\n                }\r\n                }\r\n            catch(e){\r\n                console.log(e)\r\n            }\r\n            }});\r\n    }\r\n    catch{}\r\n\r\n    return ref\r\n\r\n}\r\n\r\n\r\nexport function BgpData(ref, data){\r\n\r\n    $(ref).DataTable({\r\n      data: data\r\n      ,language: {\r\n        emptyTable: \"No BGP Neighbors\"\r\n      },\r\n      columns:  [\r\n        { data: 'remote-ip' },\r\n        { data: 'remote-as' },\r\n        { data: 'last-reset' },\r\n        { data: 'state' },\r\n        { data: 'received-prefixes' },\r\n        { data: 'prefixes-sent' },\r\n        { data: 'installed-prefixes' },\r\n        { data: 'local-port' },\r\n        { data: 'remote-port' },\r\n    ],\r\n    \r\n    fnRowCallback: function (nRow, aData) {\r\n        \r\n        try{\r\n            if(aData['state'] !== 'established'){\r\n                    $(nRow).addClass('env-row-text-warn blinking')}\r\n            else {\r\n              $('td:eq(2)', nRow).addClass('env-row-text')\r\n              $('td:eq(3)', nRow).addClass('env-row-text')\r\n\r\n            }\r\n          }\r\n        catch(e){\r\n          console.log(e)\r\n        }\r\n      }\r\n    });\r\n\r\n    return ref\r\n\r\n}\r\n\r\nexport function IpSlaData(ref, data){\r\n\r\n    try{\r\n        $(ref).DataTable().destroy()\r\n        $(ref).DataTable({\r\n            data: data,\r\n            language: {\r\n            emptyTable: \"No SLAs Found\"\r\n            },\r\n            columns:  [\r\n            { data: 'oper-id'},\r\n            { data: 'latest-oper-start-time'},\r\n            { data: 'oper-type'},\r\n            { data: 'latest-return-code' },\r\n            { data: 'success-count' },\r\n            { data: 'failure-count' },\r\n            { data: 'rtt-info.latest-rtt.rtt' },\r\n            { data: 'rtt-info.latest-rtt.time-to-live' }\r\n        ],\r\n        fnRowCallback: function (nRow, aData) {\r\n            try{\r\n                if(aData['success-count']){\r\n                      $('td:eq(4)', nRow).addClass('env-row-text')\r\n                      }\r\n                else if(parseInt(aData['failure-count']) > 0){\r\n                      $('td:eq(4)', nRow).addClass('env-row-text-warn')\r\n                }\r\n                if(!aData['rtt-info.latest-rtt.time-to-live']){\r\n                  $('td:eq(7)', nRow).html('forever')\r\n                  }\r\n              }\r\n            catch(e){}\r\n          }\r\n        });\r\n    }\r\n    catch{}\r\n\r\n}\r\n\r\nexport function CpuProcessData(ref, data){\r\n\r\n    try{\r\n        $(ref).DataTable({\r\n            data: data,\r\n            language: {\r\n                emptyTable: \"No CPU Processes Found\"\r\n            },\r\n            columns:  [\r\n                { data: 'name' },\r\n                { data: 'total-run-time' },\r\n                { data: 'avg-run-time' },\r\n                { data: 'five-seconds' },\r\n                { data: 'one-minute' },\r\n                { data: 'five-minutes' }\r\n            ],\r\n            \r\n            fnRowCallback: function (nRow, aData) {\r\n                try{\r\n                    if(parseFloat(aData['five-seconds']) > 25 ){\r\n                        $('td:eq(3)', nRow).addClass('env-row-text-warn')\r\n                        }\r\n                    if(parseFloat(aData['one-minute']) > 25 ){\r\n                        $('td:eq(4)', nRow).addClass('env-row-text-warn')\r\n                        }\r\n                    if(parseFloat(aData['five-minutes']) > 25 ){\r\n                        $('td:eq(5)', nRow).addClass('env-row-text-warn')\r\n                        }\r\n                    }\r\n                catch{}\r\n            }})\r\n        }\r\n        catch{}\r\n\r\n}\r\n\r\nexport function MemoryData(ref, data){\r\n\r\n    try{\r\n        $(ref).DataTable().destroy()\r\n        $(ref).DataTable({\r\n            language: {\r\n                emptyTable: \"No CPU Processes Found\"\r\n            },\r\n            data: [data],\r\n            columns:  [\r\n                { data: 'total'},\r\n                { data: 'used-number' },\r\n                { data: 'used-percent' },\r\n                { data: 'free-number' },\r\n                { data: 'free-percent' },\r\n                { data: 'available-number' },\r\n                { data: 'available-percent'},\r\n            ],});\r\n    }\r\n    catch{}\r\n\r\n    return ref\r\n\r\n}\r\n\r\nexport function SensorData(ref, data){\r\n\r\n    $(ref).DataTable({\r\n        language: {\r\n          emptyTable: \"No Environment Detected\"\r\n        },\r\n        data: data,\r\n        columns:  [\r\n          { data: 'name' },\r\n          { data: 'location' },\r\n          { data: 'state' },\r\n          { data: 'current-reading' },\r\n          { data: 'sensor-units' }\r\n      ],\r\n      fnRowCallback: function (nRow, aData) {\r\n\r\n        try{\r\n          if(aData['state'] === 'Normal' ||  aData['state'] === 'GREEN'){\r\n              $('td:eq(2)', nRow).addClass('env-row-text')\r\n              $('td:eq(3)', nRow).addClass('env-row-text')\r\n          }\r\n          else if(aData['state'].includes('Fan')){\r\n            //pass\r\n        }\r\n          else if(aData['state'] !== 'Normal' || aData['state'] === 'GREEN'){\r\n            $(nRow).addClass('env-row-text-warn')\r\n            $(nRow).addClass('env-row-text-warn')\r\n          }\r\n        }\r\n        catch{}\r\n      }\r\n        });\r\n\r\n    return ref\r\n\r\n}\r\n\r\nexport function PoeData(ref, data){\r\n\r\n    try{\r\n        $(ref).DataTable({\r\n        language: {\r\n            emptyTable: \"No PoE Ports\"\r\n        },\r\n        data:data,\r\n        columns:  [\r\n            { data: 'intf-name' },\r\n            { data: 'poe-intf-enabled' },\r\n            { data: 'power-used' },\r\n            { data: 'pd-class' },\r\n        ]\r\n        });\r\n    }\r\n    catch{}\r\n\r\n}\r\n\r\nexport function InvTransieverData(ref, data){\r\n\r\n    try{\r\n        $(ref).DataTable({\r\n        language: {\r\n            emptyTable: \"No Environment Detected\"\r\n        },\r\n        data: data,\r\n        columns:  [\r\n            { data: 'name' },\r\n            { data: 'serial-no' },\r\n            { data: 'connector' },\r\n            { data: 'vendor' },\r\n        ],\r\n        fnRowCallback: function (nRow, aData) {\r\n            try{\r\n            $('td:eq(2)', nRow).html(aData['connector'].replace('connector', ' '))\r\n            }\r\n            catch{}\r\n        }\r\n        });\r\n    }\r\n    catch{}\r\n\r\n}\r\n\r\nexport function TransieverData(ref, data){\r\n\r\n    try{\r\n        $(ref).DataTable({\r\n        language: {\r\n            emptyTable: \"No Environment Detected\"\r\n        },\r\n        data: data,\r\n        columns:  [\r\n            { data: 'name' },\r\n            { data: 'fault-condition' },\r\n            { data: 'internal-temp' },\r\n            { data: 'connector' },\r\n            { data: 'ethernet-pmd' },\r\n            { data: 'output-power.instant' },\r\n            { data: 'input-power.instant' },\r\n            { data: 'laser-bias-current.instant' },\r\n        ],\r\n        fnRowCallback: function (nRow, aData) {\r\n\r\n            try{\r\n                $('td:eq(3)', nRow).html(aData['connector'].replace('connector', ' '))\r\n                $('td:eq(4)', nRow).html(aData['ethernet-pmd'].replace('SFP', ' '))\r\n                if(aData['fault-condition'] === false){\r\n                    $('td:eq(1)', nRow).addClass('env-row-text')\r\n                }\r\n                else if(aData['fault-condition'] === 'true'){\r\n                    $(nRow).addClass('env-row-text-warn blinking')\r\n                }\r\n            }\r\n            catch{}\r\n        }\r\n        });\r\n    }\r\n    catch{}\r\n\r\n}\r\n\r\nexport function AccesPortData(ref, data){\r\n\r\n    try{\r\n        $(ref).DataTable({\r\n            data: data,\r\n            language: {\r\n            emptyTable: \"No Access Ports Assigned\"\r\n            },\r\n            columns:  [\r\n            { data: 'interface' },\r\n            { data: 'vlan'},\r\n            { data: 'status' },\r\n            { data: 'mbpsOut' },\r\n            { data: 'mbpsIn' }\r\n        ],\r\n        fnRowCallback: function (nRow, aData) {\r\n            try{\r\n            //Change Back to 'ready'\r\n            if(aData['status'] === 'up'){\r\n                $('td:eq(2)', nRow).html('up')\r\n                $('td:eq(2)', nRow).addClass('env-row-text')\r\n            }\r\n            else{\r\n            $('td:eq(2)', nRow).html('down')\r\n            $('td:eq(2)', nRow).addClass('env-row-text-warn')\r\n            }\r\n        }\r\n            catch{}\r\n        }\r\n            });\r\n    }\r\n    catch{}\r\n\r\n    return ref\r\n\r\n}\r\n\r\nexport function MacAddressData(ref, data){\r\n\r\n  try{\r\n    $(ref).DataTable({\r\n        data: data,\r\n        language: {\r\n          emptyTable: \"No MAC Addresses Found\"\r\n        },\r\n        columns:  [\r\n          { data: 'vlan-id-number'},\r\n          { data: 'mac'},\r\n          { data: 'mat-addr-type' },\r\n          { data: 'port' }\r\n      ]\r\n      });\r\n    }\r\n    catch{}\r\n\r\n      return ref\r\n}\r\n\r\nexport function SpanTableData(ref, data){\r\n\r\n    try{\r\n          $(ref).DataTable({\r\n            data: data,\r\n            language: {\r\n              emptyTable: \"No MAC Addresses Found\"\r\n            },\r\n            columns:  [\r\n              { data: 'name'},\r\n              { data: 'cost'},\r\n              { data: 'port-priority'},\r\n              { data: 'role' },\r\n              { data: 'state'},\r\n              { data: 'forward-transitions' },\r\n              { data: 'link-type' }\r\n          ]\r\n          });\r\n    }\r\n    catch{}\r\n\r\n    return ref\r\n\r\n}\r\n\r\n\r\nexport function TrunkData(ref, data){\r\n\r\n    try{\r\n        $(ref).DataTable({\r\n            data: data\r\n            ,language: {\r\n            emptyTable: \"No Trunks Configured\"\r\n            },\r\n            columns:  [\r\n            { data: 'interface' },\r\n            { data: 'vlans' },\r\n            { data: 'status' },\r\n            { data: 'mbpsOut' },\r\n            { data: 'mbpsIn' }\r\n        ],\r\n        fnRowCallback: function (nRow, aData) {\r\n            try{\r\n            if(aData['status'] !== 'down'){\r\n                $('td:eq(2)', nRow).html('up')\r\n                $('td:eq(2)', nRow).addClass('env-row-text')\r\n            }\r\n            else{\r\n                $('td:eq(2)', nRow).html('down')\r\n                $('td:eq(2)', nRow).addClass('env-row-text-warn')\r\n            }\r\n            }\r\n            catch{}\r\n        }});\r\n    }\r\n    catch{}\r\n\r\n    return ref\r\n\r\n}\r\n\r\nexport function VlanData(ref, data){\r\n\r\n    try{\r\n        $(ref).DataTable({\r\n            data: data,\r\n            language: {\r\n            emptyTable: \"No Vlans Configured\"\r\n            },\r\n            columns:  [\r\n            { data: 'id' },\r\n            { data: 'name' },\r\n            { data: 'status' },\r\n            { data: 'interfaces'}\r\n        ]});\r\n    }\r\n    catch{}\r\n\r\n    return ref\r\n\r\n}\r\n\r\nexport function RoutingProtocolData(ref, data){\r\n\r\n    try{\r\n        $(ref).DataTable({\r\n          language: {\r\n            emptyTable: \"Something Went Wrong\"\r\n          },\r\n          data: data,\r\n          columns:  [\r\n            { data: 'protocol' },\r\n            { data: 'id' },\r\n            { data: 'name' },\r\n            { data: 'type' },\r\n            { data: 'interfaces' },\r\n        ]});\r\n      }\r\n    catch{}\r\n\r\n    return ref\r\n}\r\n\r\n\r\nexport function RibDiffData(ref, data){\r\n\r\n    try{\r\n        $(ref).DataTable({\r\n          language: {\r\n            emptyTable: \"Rib Empty\"\r\n          },\r\n          data:data,\r\n          columns:  [\r\n            { data: 'dest_prefix' },\r\n            { data: 'next_hop' },\r\n            { data: 'outgoing_interface' },\r\n            { data: 'source_protocol' },\r\n            { data: 'time' },\r\n        ],\r\n        fnRowCallback: function (nRow, aData) {\r\n            try{\r\n                if(aData['status'] === 'green'){\r\n                      $(nRow).addClass('env-row-text')\r\n                    }\r\n                else if(aData['status'] === 'orange'){\r\n                        $(nRow).addClass('env-row-text-warn')\r\n                      }\r\n              }\r\n            catch(e){console.log(e)}\r\n          }});\r\n      }\r\n\r\n    catch{}\r\n\r\n    return ref\r\n\r\n\r\n}\r\n\r\n\r\nexport function Ipv4Ribs(ref, data){\r\n\r\n    try{\r\n        $(ref).DataTable({\r\n          language: {\r\n            emptyTable: \"Rib Empty\"\r\n          },\r\n          data:data,\r\n          columns:  [\r\n            { data: 'name' },\r\n            { data: 'address_family' },\r\n            { data: 'dest_prefix' },\r\n            { data: 'metric' },\r\n            { data: 'route_preference' },\r\n            { data: 'next_hop' },\r\n            { data: 'outgoing_interface'},\r\n            { data: 'active' },\r\n            { data: 'source_protocol' } \r\n        ]});\r\n      }\r\n\r\n    catch{}\r\n\r\n    return ref\r\n\r\n\r\n}\r\n\r\nexport function Ipv6Ribs(ref, data){\r\n\r\n    try{\r\n        $(ref).DataTable({\r\n          language: {\r\n            emptyTable: \"Rib Empty\"\r\n          },\r\n          data:data,\r\n          columns:  [\r\n            { data: 'name' },\r\n            { data: 'address_family' },\r\n            { data: 'dest_prefix' },\r\n            { data: 'metric' },\r\n            { data: 'route_preference' },\r\n            { data: 'next_hop' },\r\n            { data: 'outgoing_interface'},\r\n            { data: 'active' },\r\n            { data: 'source_protocol' } \r\n        ]});\r\n      }\r\n\r\n    catch{}\r\n\r\n    return ref\r\n\r\n\r\n}","import React, { useEffect } from 'react';\r\nimport { ArpTableHtml } from '../Other/chartConfigs';\r\nimport { ArpData } from '../Other/tables';\r\nconst $ = require('jquery');\r\n$.DataTable = require('datatables.net');\r\n\r\n\r\nexport  function Arps(props){\r\n  const arpTableRef = React.createRef()\r\n  const table = ArpTableHtml(arpTableRef)\r\n  $.fn.dataTable.ext.errMode = 'none';\r\n\r\n  useEffect(() => {\r\n    if(arpTableRef.current !== null){\r\n      try{\r\n        $(arpTableRef.current).DataTable().clear()\r\n        $(arpTableRef.current).DataTable().rows.add(props.arps)\r\n        $(arpTableRef.current).DataTable().draw(false)\r\n      }\r\n      catch{}\r\n    }\r\n\r\n  }, [props.arps])\r\n  \r\n  useEffect(() => {\r\n    $(arpTableRef.current).DataTable().destroy()\r\n    ArpData(arpTableRef.current, props.arps)\r\n  \r\n  }, [])\r\n\r\n  return table\r\n  \r\n  }\r\n","import React, { useEffect } from 'react';\r\nimport { InterfacesTableHtml } from '../Other/chartConfigs';\r\nimport { InterfaceData } from '../Other/tables';\r\nconst $ = require('jquery');\r\n$.DataTable = require('datatables.net');\r\n\r\nexport  function InterfaceTable(props){\r\n  const interfacesTableRef = React.createRef()\r\n  const interfacestable = InterfacesTableHtml(interfacesTableRef)\r\n  $.fn.dataTable.ext.errMode = 'none';\r\n  \r\n  useEffect(() => {\r\n    if(interfacesTableRef.current !== null){\r\n      try{\r\n        $(interfacesTableRef.current).DataTable().clear()\r\n        $(interfacesTableRef.current).DataTable().rows.add(Object.values(props.interfaces))\r\n        $(interfacesTableRef.current).DataTable().draw(false)\r\n      }\r\n      catch{}\r\n    }\r\n\r\n    }, [props.interfaces])\r\n\r\n\r\n  useEffect(() => {\r\n    $(interfacesTableRef.current).DataTable().destroy()\r\n    InterfaceData(interfacesTableRef.current, props.interfaces)\r\n}, [])\r\n\r\n  return interfacestable\r\n                \r\n  }\r\n  ","export default __webpack_public_path__ + \"static/media/router.cd099654.png\";","import router from '../Images/router.png';\r\nimport { Network } from \"vis-network\";\r\n\r\nvar font = { size: 15, strokeWidth: 0, color: 'white'}\r\nvar nodeFont = { size: 16, color: \"white\"}\r\nvar options = {\r\n  nodes: {\r\n    shape: 'image',\r\n    image: router,\r\n    size: 35,\r\n    color: {\r\n      border: 'black',\r\n      background: '#166F20',\r\n      highlight: {\r\n        border: '#2B7CE9',\r\n        background: '#D2E5FF'\r\n          }\r\n        }\r\n      },\r\n    layout: {\r\n      randomSeed: undefined,\r\n      improvedLayout:true,\r\n      clusterThreshold: 150,\r\n      hierarchical: {\r\n        enabled:true,\r\n        levelSeparation: 500,\r\n        treeSpacing: 300,\r\n        edgeMinimization: true,\r\n        parentCentralization: true,\r\n        direction: 'DU',        // UD, DU, LR, RL\r\n        sortMethod: 'directed',  // hubsize, directed\r\n        shakeTowards: 'leaves'  // roots, leaves\r\n          }\r\n      },\r\n      physics:{\r\n      enabled: true,\r\n      hierarchicalRepulsion: {\r\n        centralGravity: 0.0,\r\n        springLength: 0,\r\n        springConstant: 0.01,\r\n        nodeDistance: 250,\r\n        damping: 1,\r\n        avoidOverlap: 1\r\n      },\r\n    },\r\n\r\n}\r\n\r\nexport function UpdateHsrpTopology(ref, interfaces, localIp){\r\n\r\n  Object.entries(interfaces).forEach((details, i) => {\r\n           \r\n    if (details[1].standby === 'unknown' || details[1].state === 'Init'){\r\n        ref.body.data.edges.update({id: details[1].vlanInt, \r\n          from: localIp, \r\n          to: i, \r\n          color: 'yellow',\r\n          label: details[1].vlanInt + '\\n' + details[1].state + \"\\n\" + details[1].active, \r\n          font: font\r\n          });\r\n\r\n    }\r\n    else{\r\n        ref.body.data.edges.update({id: details[1].vlanInt, \r\n                        from: localIp, \r\n                        to: i, \r\n                        color: 'green',\r\n                        label: details[1].vlanInt + '\\n' + details[1].state + \"\\n\" + details[1].active, \r\n                        font: font\r\n                        });\r\n    }})\r\n    \r\n    return  ref\r\n\r\n    }\r\n\r\nexport function HsrpTopologyBuild(ref, interfaces, localIp){\r\n\r\n    const nodes = []\r\n    const edges = []\r\n\r\n    nodes.push({id: localIp, label: 'Local\\n' + localIp, font: nodeFont })\r\n\r\n    Object.entries(interfaces).forEach((details, i) => {\r\n        nodes.push({id: details[0], label: details[1].vlanInt + \"\\n\" + details[1].vip, font: font});\r\n        nodes.push({id: i, label: details[1].vlanInt + \"\\n\" + details[1].vip, font: font});\r\n    })\r\n\r\n    Object.entries(interfaces).forEach((details, i) => {\r\n          if (details[1].standby === 'unknown' || details[1].state === 'Init'){\r\n                edges.push({id: details[1].vlanInt, \r\n                            from: localIp, \r\n                            to: i, \r\n                            color: 'yellow',\r\n                            label: details[1].vlanInt + '\\n' + details[1].state + \"\\n\" + details[1].active, \r\n                            font: font\r\n                            });\r\n                }\r\n                else{\r\n                    edges.push({id: details[1].vlanInt, \r\n                        from: localIp, \r\n                        to: i, \r\n                        color: 'green',\r\n                        label: details[1].vlanInt + '\\n' + details[1].state + \"\\n\" + details[1].active, \r\n                        font: font\r\n                        });\r\n                }})\r\n                console.log(ref)\r\n    var network = new Network(ref, {nodes: nodes, edges: edges}, options);\r\n    \r\n    return  network\r\n\r\n    }","import React, { useEffect, useRef } from 'react';\r\nimport { HsrpTableHtml } from '../Other/chartConfigs';\r\nimport { HsrpData } from '../Other/tables';\r\nimport { HsrpTopologyBuild, UpdateHsrpTopology } from './topology';\r\nconst $ = require('jquery');\r\n$.DataTable = require('datatables.net');\r\n\r\n\r\nexport  function Hsrp(props){\r\n  const hsrpTableRef = React.createRef()\r\n  const table = HsrpTableHtml(hsrpTableRef)\r\n  const hsrpTopologyRef = React.createRef()\r\n  const hsrpTopology = useRef(null)\r\n  $.fn.dataTable.ext.errMode = 'none';\r\n\r\n  useEffect(() => {\r\n    if(hsrpTableRef.current !== null){\r\n      try{\r\n        $(hsrpTableRef.current).DataTable().clear()\r\n        $(hsrpTableRef.current).DataTable().rows.add(props.hsrp)\r\n        $(hsrpTableRef.current).DataTable().draw(false)\r\n      }\r\n      catch{}\r\n      try{\r\n          hsrpTopology.current = UpdateHsrpTopology(hsrpTopology.current, props.hsrp, props.localIp)\r\n          hsrpTopologyRef.current =  hsrpTopology.current\r\n      }\r\n      catch(e){console.log(e)}\r\n    }\r\n\r\n  }, [props.hsrp])\r\n  \r\n  useEffect(() => {\r\n    \r\n    $(hsrpTableRef.current).DataTable().destroy()\r\n    HsrpData(hsrpTableRef.current, props.hsrp)\r\n\r\n    try{\r\n      if(props.hsrp.length >= 1){\r\n        hsrpTopology.current = HsrpTopologyBuild(hsrpTopologyRef.current, props.hsrp, props.localIp)\r\n        hsrpTopologyRef.current =  hsrpTopology.current\r\n      }\r\n    }\r\n    catch{}\r\n\r\n  }, [])\r\n\r\n    return <div>\r\n                <div className=\"col-12\">\r\n                  <div ref={hsrpTopologyRef} className=\"bg-dark\" style={{width: '100%', height: '300px'}}/>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                  {table}\r\n                </div>\r\n              </div>\r\n  }\r\n","import React, { useEffect } from 'react';\nimport Tabs from \"react-bootstrap/Tabs\";\nimport Tab from \"react-bootstrap/Tab\";\nimport { CdpTableHtml, LldpTableHtml } from './chartConfigs';\nimport { CdpTable, LldpTable } from './tables';\nconst $ = require('jquery');\n$.DataTable = require('datatables.net');\n\n\nexport  function DpNeighbors(props){\n  const cdpTableRef = React.createRef()\n  const cdptable = CdpTableHtml(cdpTableRef)\n  const lldpTableRef = React.createRef()\n  const lldptable = LldpTableHtml(lldpTableRef)\n  $.fn.dataTable.ext.errMode = 'none';\n\n  useEffect(() => {\n    if(cdpTableRef.current !== null){\n      try{\n        $(cdptable.current).DataTable().clear()\n        $(cdptable.current).DataTable().rows.add(props.dpNeighbors[0])\n        $(cdptable.current).DataTable().draw(false)\n      }\n      catch{}\n    }\n\n    \n    if(lldpTableRef.current !== null){\n      try{\n        $(lldpTableRef.current).DataTable().clear()\n        $(lldpTableRef.current).DataTable().rows.add(props.dpNeighbors[1])\n        $(lldpTableRef.current).DataTable().draw(false)\n      }\n      catch{}\n    }\n    }, [props.dpNeighbors])\n\n  useEffect(() => {\n      $(lldpTableRef.current).DataTable().destroy() \n      $(cdptable.current).DataTable().destroy()\n      CdpTable(cdpTableRef.current, props.dpNeighbors[0])\n      LldpTable(lldpTableRef.current, props.dpNeighbors[1])\n  }, [])\n\n  return  <Tabs defaultActiveKey=\"cdp\" id=\"dpneighbors\">\n                  <Tab eventKey=\"cdp\" title=\"CDP\">\n                      {cdptable}\n                  </Tab>\n                  <Tab eventKey=\"lldp\" title=\"LLDP\">\n                      {lldptable}\n                  </Tab>\n                </Tabs>\n            \n            \n      \n  }\n  ","\r\nimport Card from \"react-bootstrap/Card\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nexport function IsErrorFallback(){\r\n\r\n    return <Card bg=\"dark\" className=\"mb-3\" style={{height: '500px'}}>\r\n            <Card.Body>\r\n            <h3 classname=\"text-center fade-in\" style={{marginTop: 185, color: \"orange\", fontWeight: \"bold\"}}>!Something Went Wrong. Please Refresh! Please Report the Issue</h3>\r\n            <Link to='https://github.com/cober2019/react-ios-xe-ops/issues'>Click Here to Submit Issue</Link>\r\n            </Card.Body>\r\n        </Card>\r\n}","import { ErrorBoundary } from  'react-error-boundary'\r\nimport Card from \"react-bootstrap/Card\";\r\nimport { IsErrorFallback } from \"../Other/errorComponent\";\r\n\r\nexport function CreateCard(component, title){\r\n\r\n    const card =  <Card bg=\"dark\" className=\"mb-3\">\r\n                    <Card.Body>\r\n                        <Card.Title className=\"mb-3\">{title}</Card.Title>\r\n                        <ErrorBoundary  FallbackComponent={IsErrorFallback}>\r\n                            {component}\r\n                        </ErrorBoundary>\r\n                    </Card.Body>\r\n                </Card>\r\n\r\n    return card\r\n    \r\n}\r\n","import axios from 'axios';\r\nconst instance = axios.create();\r\ninstance.defaults.timeout = 3000;\r\n\r\nexport function Login(ip, username, password) {\r\n    return new Promise(resolve => {\r\n      resolve(axios.post('/login', {'ip': ip, 'username': username, 'password': password, 'port': 443},  { timeout: 30000 }))}\r\n    );\r\n  }\r\n\r\nexport function Token() {\r\n    return new Promise(resolve => {\r\n      resolve(axios.post('/token', {'username': 'test', 'password': 'password'}))}\r\n    ); \r\n  }\r\n\r\n\r\nexport function PollInterfaces(ip, username, password, port) {\r\n  return new Promise(resolve => {\r\n    setTimeout(() => {\r\n      resolve(axios.post('/getinterfaces', {'ip': ip, 'username': username, 'password': password, 'port': port}));\r\n    }, 2000);\r\n  });\r\n}\r\n\r\nexport function GetCpuStatus(ip, username, password, port) {\r\n  return new Promise(resolve => {\r\n    setTimeout(() => {\r\n      resolve(axios.post('/cpustatus', {'ip': ip, 'username': username, 'password': password, 'port': port}));\r\n    }, 2000);\r\n  });\r\n}\r\n\r\nexport function GetHwdStatus(ip, username, password, port) {\r\n  return new Promise(resolve => {\r\n    setTimeout(() => {\r\n      resolve(axios.post('/hardwarestatus', {'ip': ip, 'username': username, 'password': password, 'port': port}));\r\n    }, 5000);\r\n  });\r\n}\r\n\r\nexport function GetComponents(ip, username, password, port) {\r\n  return new Promise(resolve => {\r\n    setTimeout(() => {\r\n      resolve(axios.post('/getcomponents', {'ip': ip, 'username': username, 'password': password, 'port': port}));\r\n    }, 5000);\r\n  });\r\n}\r\n\r\nexport function GetDpNeighbors(ip, username, password, port) {\r\n  return new Promise(resolve => {\r\n    setTimeout(() => {\r\n      resolve(axios.post('/neighbors', {'ip': ip, 'username': username, 'password': password, 'port': port}));\r\n    }, 5000);\r\n  });\r\n}\r\n\r\nexport function GetVlans(ip, username, password, port) {\r\n  return new Promise(resolve => {\r\n    setTimeout(() => {\r\n      resolve(axios.post('/vlans', {'ip': ip, 'username': username, 'password': password, 'port': port}));\r\n    }, 5000);\r\n  });\r\n}\r\n\r\nexport function GetLayerTwoInterfaces(ip, username, password, port) {\r\n  return new Promise(resolve => {\r\n    setTimeout(() => {\r\n      resolve(axios.post('/layertwointerfaces', {'ip': ip, 'username': username, 'password': password, 'port': port}));\r\n    }, 5000);\r\n  });\r\n}\r\n\r\nexport function GetEnvStatus(ip, username, password, port) {\r\n  return new Promise(resolve => {\r\n    setTimeout(() => {\r\n      resolve(axios.post('/getenvirmoment', {'ip': ip, 'username': username, 'password': password, 'port': port}));\r\n    }, 5000);\r\n  });\r\n}\r\n\r\nexport function GetSfpStatus(ip, username, password, port) {\r\n  return new Promise(resolve => {\r\n    setTimeout(() => {\r\n      resolve(axios.post('/sfpstatus', {'ip': ip, 'username': username, 'password': password, 'port': port}));\r\n    }, 5000);\r\n  });\r\n}\r\n\r\nexport function GeBgpStatus(ip, username, password, port) {\r\n  return new Promise(resolve => {\r\n    setTimeout(() => {\r\n      resolve(axios.post('/bgpstatus', {'ip': ip, 'username': username, 'password': password, 'port': port}));\r\n    }, 5000);\r\n  });\r\n}\r\n\r\nexport function PollIndexPage(ip, username, password, port, source) {\r\n  return new Promise(resolve => {\r\n    setTimeout(() => {\r\n      resolve(axios.post('/pollIndexPage', {'ip': ip, 'username': username, 'password': password, 'port': port}));\r\n    }, 5000);\r\n  });\r\n}\r\n\r\nexport function PollL2Page(ip, username, password, port) {\r\n  return new Promise(resolve => {\r\n    setTimeout(() => {\r\n      resolve(axios.post('/pollL2Page', {'ip': ip, 'username': username, 'password': password, 'port': port}));\r\n    }, 5000);\r\n  });\r\n}\r\n\r\nexport function ApiCheck() {\r\n  return new Promise(resolve => {\r\n    setTimeout(() => {\r\n      resolve(axios.post('/apistatus'));\r\n    }, 5000);\r\n  });\r\n}\r\n\r\n\r\n\r\n ","import React, { useState, useEffect } from 'react';\nimport { ApiCheck } from './promises'\nimport Nav from \"react-bootstrap/Nav\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport { Link } from \"react-router-dom\";\n\nexport  function Navigation(props){\n  const [apiStatus, setApiStatus] = useState(true)\n\n  useEffect(() => {\n    (async () => {\n      try{\n        let apiStatus = await ApiCheck()\n        if(apiStatus.status === 200)\n            setApiStatus(true)\n        else{\n            setApiStatus(false)\n        }\n    }\n    catch{\n        setApiStatus(false)\n    }\n\n    })()\n    }, [props.update])\n\n  return  <Row xl className=\"mt-3\">\n            <Navbar expand=\"lg\" >\n                <Container fluid>\n                <Navbar.Brand href=\"#home\" className=\"disabledCursor\">XE Ops</Navbar.Brand>\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"me-auto\">\n                        <Link className=\"nav-link text-light\" to=\"/index\">Home</Link>\n                        {localStorage.getItem('model') !== 'ASR' &&  localStorage.getItem('model') !== 'CSR' ? <Link className=\"nav-link text-light\" to=\"/layerTwo\">LayerTwo</Link> : <div/>}\n                        <Link className=\"nav-link text-light\" to=\"/routing\">Routing</Link>\n                        <Link className=\"nav-link text-light\" to=\"/environment\">Env</Link>\n                        <Link className=\"nav-link text-light\" to=\"/dmvpn\">DMVPN</Link>\n                        <Link className=\"nav-link text-light\" to='/ipslas'>IP Slas</Link>\n                        <Link className=\"nav-link text-light\" to=\"/ribstatus\">RibStatus</Link>\n                        <Link className=\"nav-link text-light\" to=\"/live_interfaces\">Live-Interfaces</Link>\n                        <Link className=\"nav-link text-light\" to=\"/config\">Cfg/Oper</Link>\n                        <Link className=\"nav-link text-light\" to='/logout'>Logout</Link>\n                        <Link className=\"nav-link text-light disabledCursor\" style={{fontWeight: 'bold'}}>&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;Connection: {props.ip}</Link>\n                        {apiStatus ? <Link className=\"nav-link text-light disabledCursor\" style={{fontWeight: 'bold'}}>API Reachable: &nbsp;<span><div className=\"fa fa-circle env-row-text\"></div></span></Link> \n                        :  \n                        <Link className=\" env-row-text-warn nav-link text-light disabledCursor\" style={{fontWeight: 'bold'}}><span >API Unreachable</span></Link>}\n                        {props.fetchingStatus ? <Link className=\"nav-link text-light disabledCursor\" style={{fontWeight: 'bold'}}>Polling Status: &nbsp;&nbsp;<div className=\"fa fa-circle env-row-text\"></div></Link>: \n                            <Link className=\"nav-link text-light\"style={{fontWeight: 'bold'}} >Polling Status: &nbsp;&nbsp;<span><div className=\"fa fa-circle env-row-text-warn disabledCursor\"></div></span></Link>\n                            }\n                        <Link className=\"nav-link text-light disabledCursor\" style={{fontWeight: 'bold'}}>CPU: {props.cpu['Cisco-IOS-XE-process-cpu-oper:cpu-utilization']['five-seconds']}%</Link>\n                        <Link className=\"nav-link text-light disabledCursor\"  style={{fontWeight: 'bold'}}>Memory: {props.mem['used-percent']}%</Link>\n                        <Link className=\"nav-link text-light disabledCursor  \"  style={{fontWeight: 'bold'}}>|&nbsp;&nbsp;&nbsp;Device Model/SN: {localStorage.getItem('model')} ({localStorage.getItem('serial')})</Link>\n\n                    </Nav>\n                    </Navbar.Collapse>\n                </Container>\n            </Navbar>\n            </Row>\n                \n  }\n  ","import Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Container from \"react-bootstrap/Container\";\r\n\r\nexport const PageLoader = (ip, serial, model, uptime, software) => {\r\n\r\n    const html = <Container fluid=\"xl\">\r\n                <Row>\r\n                        <Col xl={2}/>\r\n                        <Col xl={8}>\r\n                            <Card bg=\"dark\" className=\"mb-3\" style={{marginTop: \"100px\"}}>\r\n                                <Card.Body>\r\n                                    <h3 className=\"blinking-loader\">Collecting Data From {ip}</h3>\r\n                                    <br/>\r\n                                    <h6 >Device Model/SN: {model} ({serial})</h6>\r\n                                    <h6 >Uptime: {uptime}</h6>\r\n                                    <h6 >Software:  ({software})</h6>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Col>\r\n                        <Col xl={2}/>\r\n                    </Row>\r\n                     </Container>\r\n        \r\n    return html\r\n}\r\n\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { ApiCheck } from './promises'\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport  function NavigationFallback(props){\r\n  const [apiStatus, setApiStatus] = useState(true)\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      try{\r\n        let apiStatus = await ApiCheck()\r\n        if(apiStatus.status === 200)\r\n            setApiStatus(true)\r\n        else{\r\n            setApiStatus(false)\r\n        }\r\n    }\r\n    catch{\r\n        setApiStatus(false)\r\n    }\r\n\r\n    })()\r\n    }, [props.update])\r\n\r\n  return  <Row xl className=\"mt-3\">\r\n            <Navbar expand=\"lg\" >\r\n                <Container fluid>\r\n                <Navbar.Brand href=\"#home\" className=\"disabledCursor\">XE Ops</Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Nav className=\"me-auto\">\r\n                        <Link className=\"nav-link text-light\" to=\"/index\">Home</Link>\r\n                        {localStorage.getItem('model') !== 'ASR' &&  localStorage.getItem('model') !== 'CSR' ? <Link className=\"nav-link text-light\" to=\"/layerTwo\">LayerTwo</Link> : <div/>}\r\n                        <Link className=\"nav-link text-light\" to=\"/routing\">Routing</Link>\r\n                        <Link className=\"nav-link text-light\" to=\"/environment\">Env</Link>\r\n                        <Link className=\"nav-link text-light\" to=\"/dmvpn\">DMVPN</Link>\r\n                        <Link className=\"nav-link text-light\" to='/ipslas'>IP Slas</Link>\r\n                        <Link className=\"nav-link text-light\" to=\"/ribstatus\">RibStatus</Link>\r\n                        <Link className=\"nav-link text-light\" to=\"/live_interfaces\">Live-Interfaces</Link>\r\n                        <Link className=\"nav-link text-light\" to=\"/config\">Cfg/Oper</Link>\r\n                        <Link className=\"nav-link text-light\" to='/logout'>Logout</Link>\r\n                        <Link className=\"nav-link text-light disabledCursor\" style={{fontWeight: 'bold'}}>&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;Connection: {props.ip}</Link>\r\n                        {apiStatus ? <Link className=\"nav-link text-light disabledCursor\" style={{fontWeight: 'bold'}}>API Reachable: &nbsp;<span><div className=\"fa fa-circle env-row-text\"></div></span></Link> \r\n                        :  \r\n                        <Link className=\" env-row-text-warn nav-link text-light disabledCursor\" style={{fontWeight: 'bold'}}><span >API Unreachable</span></Link>}\r\n                        {props.fetchingStatus ? <Link className=\"nav-link text-light disabledCursor\" style={{fontWeight: 'bold'}}>Polling Status: &nbsp;&nbsp;<div className=\"fa fa-circle env-row-text\"></div></Link>: \r\n                            <Link className=\"nav-link text-light\"style={{fontWeight: 'bold'}} >Polling Status: &nbsp;&nbsp;<span><div className=\"fa fa-circle env-row-text-warn disabledCursor\"></div></span></Link>\r\n                            }\r\n                        <Link className=\"nav-link text-light disabledCursor\" style={{fontWeight: 'bold'}}>CPU: Err</Link>\r\n                        <Link className=\"nav-link text-light disabledCursor\"  style={{fontWeight: 'bold'}}>Memory: Err</Link>\r\n                    </Nav>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n            </Row>\r\n                \r\n  }\r\n  ","import React from 'react';\nimport { useQuery } from 'react-query'\nimport Tabs from \"react-bootstrap/Tabs\";\nimport Tab from \"react-bootstrap/Tab\";\nimport Container from \"react-bootstrap/Container\";\nimport Card from \"react-bootstrap/Card\";\nimport axios from 'axios';\nimport {useRecoilState} from 'recoil';\nimport { ErrorBoundary } from  'react-error-boundary'\nimport { Arps} from './arps'\nimport { InterfaceTable} from './InterfacesTable'\nimport { Hsrp} from './hsrp'\nimport { DpNeighbors} from '../Other/dp_neighbors'\nimport { CreateCard } from '../Other/jsxCard';\nimport { Navigation } from '../Other/navbar';\nimport { PageLoader } from '../Other/pageLoader';\nimport { AES, enc }from 'crypto-js';\nimport { NavigationFallback } from \"../Other/navbarError\";\nimport {encytpKey}  from '../../App'\n\nexport function Index(){\n  const [decrypt] = useRecoilState(encytpKey);\n  const passwordDecrypt = AES.decrypt(localStorage.getItem('password'), decrypt);\n  const { isLoading, error, data, isFetching } = useQuery(localStorage.getItem('ip') + 'indexData', async () => {\n        const data = await axios.post('/pollIndexPage', {'ip': localStorage.getItem('ip'), 'username': localStorage.getItem('username'), \n                          'password': passwordDecrypt.toString(enc.Utf8), 'port': localStorage.getItem('port')})\n\n        return data.data\n\n  },\n  {\n    refetchInterval: 10000\n  }\n  )\n\n  if (error){\n    return  <div>\n                <ErrorBoundary FallbackComponent={NavigationFallback}>\n                  <Navigation update={data} ip={localStorage.getItem('ip')} fetchingStatus={isFetching}/>\n                </ErrorBoundary>\n              <h4 className=\"text-center fade-in\" style={{marginTop: 100}}>Error Collecting Data. I'll Keep Trying</h4>\n              <div className=\"warning-loader text-center\"></div>\n            </div>\n  }\n  else if (data){\n\n        return  <Container fluid>\n                    <ErrorBoundary FallbackComponent={NavigationFallback}>\n                        <Navigation update={data} ip={localStorage.getItem('ip')} fetchingStatus={isFetching} cpu={data.cpu} mem={data.mem}/>\n                    </ErrorBoundary>\n                    <Card bg=\"dark\" className=\"mb-3\">\n                      <Card.Body>\n                      <Tabs  defaultActiveKey=\"Interfacetable\" id=\"interfaces\">\n                        <Tab eventKey=\"Interfacetable\" title=\"Interface Table\">\n                          {CreateCard(<InterfaceTable interfaces={data.interfaces}/>)}\n                          </Tab>\n                        <Tab eventKey=\"arp\" title=\"ARP\">\n                          {CreateCard(<Arps arps={data.arps}/>, \"ARPs\")}\n                        </Tab>\n                      </Tabs>\n                      </Card.Body>\n                    </Card>\n                    {CreateCard(<DpNeighbors dpNeighbors={data.dp}/>)}\n                    {data.hsrp.length > 0 ? CreateCard(<Hsrp hsrp={data.hsrp} localIp={localStorage.getItem('ip')}/>, \"HSRP Topology\") : <div/>}\n                  </Container>\n      }\n  else if (isLoading){\n\n    return  <div>\n              {PageLoader(localStorage.getItem('ip'), localStorage.getItem('serial'), localStorage.getItem('model'), localStorage.getItem('uptime'), localStorage.getItem('software'))}\n            </div>\n  }\n\n\n  }\n    \n  \n  \n","import React, { useEffect } from 'react';\r\nimport { MacTableHtml } from '../Other/chartConfigs';\r\nimport { MacAddressData } from '../Other/tables';\r\nconst $ = require('jquery');\r\n$.DataTable = require('datatables.net');\r\n\r\nexport  function MacTable(props){\r\n  const macTableRef = React.createRef()\r\n  const macTable = MacTableHtml(macTableRef)\r\n  $.fn.dataTable.ext.errMode = 'none';\r\n  console.log(props.macs)\r\n  \r\n  useEffect(() => {\r\n    if(macTableRef.current !== null){\r\n      try{\r\n        $(macTableRef.current).DataTable().clear()\r\n        $(macTableRef.current).DataTable().rows.add(Object.values(props.macs))\r\n        $(macTableRef.current).DataTable().draw(false)\r\n      }\r\n      catch{}\r\n    }\r\n\r\n    }, [props.macs])\r\n\r\n\r\n  useEffect(() => {\r\n    $(macTableRef.current).DataTable().destroy()\r\n    MacAddressData(macTableRef.current, props.macs)\r\n}, [])\r\n\r\n  return  macTable\r\n\r\n  }\r\n  ","import React, { useEffect } from 'react';\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport { SpanTreeHtml } from '../Other/chartConfigs';\r\nimport { SpanTableData } from '../Other/tables';\r\nimport { CreateCard } from '../Other/jsxCard';\r\nconst $ = require('jquery');\r\n$.DataTable = require('datatables.net');\r\n\r\n\r\nexport  function SpanTable(props){\r\n  const spanTableRef = React.createRef()\r\n  const spanTable = SpanTreeHtml(spanTableRef)\r\n  $.fn.dataTable.ext.errMode = 'none';\r\n  \r\n  useEffect(() => {\r\n    if(spanTableRef.current !== null){\r\n      try{\r\n        $(spanTableRef.current).DataTable().clear()\r\n        $(spanTableRef.current).DataTable().rows.add(Object.values(props.span))\r\n        $(spanTableRef.current).DataTable().draw(false)\r\n      }\r\n      catch{}\r\n    }\r\n\r\n    }, [props.span])\r\n\r\n\r\n  useEffect(() => {\r\n    $(spanTableRef.current).DataTable().destroy()\r\n    SpanTableData(spanTableRef.current, props.span)\r\n     \r\n}, [])\r\n\r\n    return    <Card bg={\"dark\"}  className=\"border-bottom\">\r\n                  <Card.Body>\r\n                      <Row>\r\n                        <Col xl={12}>\r\n                          <Card.Title className=\"mb-3\">{props.span.instance}</Card.Title>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                          <Col xl={2}>\r\n                              <p className=\"card-text\">Hello:</p>\r\n                              <p className=\"card-text\">Fwd-Delay:</p>\r\n                              <p className=\"card-text\">Hold Count:</p>\r\n                              <p className=\"card-text\">Bridge Prio.:</p>\r\n                              <p className=\"card-text\">Bridge Add.:</p>\r\n                              <p className=\"card-text\">Des. Root Prio.:</p>\r\n                              <p className=\"card-text\">Des. Root Add.:</p>\r\n                              <p className=\"card-text\">Root Port:</p>\r\n                              <p className=\"card-text\">Root Cost:</p>\r\n                              <p className=\"card-text\">Hold Time:</p>\r\n                              <p className=\"card-text\">Topology Changes:</p>\r\n                              <p className=\"card-text\">Last Change:</p>\r\n                          </Col>\r\n                          <Col xl={2}>\r\n                              <p className=\"card-text\">{props.span['hello-time']}</p>\r\n                              <p className=\"card-text\">{props.span['forwarding-delay']}</p>\r\n                              <p className=\"card-text\">{props.span['hold-count']}</p>\r\n                              <p className=\"card-text\">{props.span['bridge-priority']}</p>\r\n                              <p className=\"card-text\">{props.span['bridge-address']}</p>\r\n                              <p className=\"card-text\">{props.span['designated-root-priority']}</p>\r\n                              <p className=\"card-text\">{props.span['designated-root-address']}</p>\r\n                              <p className=\"card-text\">{props.span['root-port']}</p>\r\n                              <p className=\"card-text\">{props.span['root-cost']}</p>\r\n                              <p className=\"card-text\">{props.span['hold-time']}</p>\r\n                              <p className=\"card-text\">{props.span['topology-changes']}</p>\r\n                              <p className=\"card-text\">{props.span['time-of-last-topology-change']}</p>\r\n                          </Col>\r\n                          <Col xl={8}>\r\n                            {CreateCard(spanTable, \"Ports\")}\r\n                          </Col>\r\n                      </Row>\r\n                  </Card.Body>\r\n              </Card>\r\n\r\n               \r\n  }\r\n  ","import React, { useEffect } from 'react';\nimport { TrunkTableHtml } from '../Other/chartConfigs';\nimport { TrunkData } from '../Other/tables';\nconst $ = require('jquery');\n$.DataTable = require('datatables.net');\n\nexport  function Trunks(props){\n  const trunksTableRef = React.createRef()\n  const trunkstable = TrunkTableHtml(trunksTableRef)\n  console.log(props.ports, 'yes')\n\n  useEffect(() => {\n    if(trunksTableRef.current !== null){\n      try{\n        $(trunksTableRef.current).DataTable().clear()\n        $(trunksTableRef.current).DataTable().rows.add(Object.values(props.ports))\n        $(trunksTableRef.current).DataTable().draw(false)\n      }\n      catch{}\n    }\n    }, [props.ports])\n\n  useEffect(() => {\n        $(trunksTableRef.current).DataTable().destroy()\n        TrunkData(trunksTableRef.current, props.ports)\n  }, [])\n\n  return  trunkstable\n\n  }\n  ","import React, { useEffect } from 'react';\nimport { AccessTableHtml } from '../Other/chartConfigs';\nimport { AccesPortData } from '../Other/tables';\nconst $ = require('jquery');\n$.DataTable = require('datatables.net');\n\nexport  function AccessPorts(props){\n  const accesssTableRef = React.createRef()\n  const accessstable = AccessTableHtml(accesssTableRef)\n  $.fn.dataTable.ext.errMode = 'none';\n\n\n  useEffect(() => {\n    if(accesssTableRef.current !== null){\n      try{\n        $(accesssTableRef.current).DataTable().clear()\n        $(accesssTableRef.current).DataTable().rows.add(Object.values(props.ports))\n        $(accesssTableRef.current).DataTable().draw(false)\n      }\n      catch{}\n    }\n    }, [props.ports])\n\n\n  useEffect(() => {\n        $(accesssTableRef.current).DataTable().destroy()\n        AccesPortData(accesssTableRef.current, props.ports)\n  }, [])\n\n  return  accessstable\n       \n  }\n  ","import React, { useEffect } from 'react';\r\nimport { VlanTableHtml } from '../Other/chartConfigs';\r\nimport { VlanData } from '../Other/tables';\r\n\r\nconst $ = require('jquery');\r\n$.DataTable = require('datatables.net');\r\n\r\nexport  function Vlans(props){\r\n  const vlanTableRef = React.createRef()\r\n  const vlantable = VlanTableHtml(vlanTableRef)\r\n\r\n  useEffect(() => {\r\n    $(vlanTableRef.current).DataTable().destroy()\r\n    VlanData(vlanTableRef.current, props.vlans)\r\n    \r\n  }, [])\r\n\r\n  return  vlantable\r\n\r\n  }\r\n  ","import React, { useRef } from 'react';\nimport { useQuery } from 'react-query';\nimport axios from 'axios';\nimport Tabs from \"react-bootstrap/Tabs\";\nimport Tab from \"react-bootstrap/Tab\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport {useRecoilState} from 'recoil';\nimport { DpNeighbors} from '../Other/dp_neighbors'\nimport { GlobalSpanTreeHtml} from '../Other/chartConfigs'\nimport { MacTable} from './macAddress'\nimport { SpanTable} from './spanTree'\nimport { Trunks} from './trunks'\nimport { AccessPorts} from './accessPorts'\nimport { Vlans} from './vlans'\nimport { Navigation } from '../Other/navbar';\nimport { ErrorBoundary } from  'react-error-boundary'\nimport { AES, enc}from 'crypto-js';\nimport {encytpKey}  from '../../App'\nimport { CreateCard } from '../Other/jsxCard';\nimport { Card } from 'react-bootstrap';\nimport { NavigationFallback } from \"../Other/navbarError\";\nimport { IsErrorFallback } from \"../Other/errorComponent\";\nimport { PageLoader } from '../Other/pageLoader';\n\nexport  function LayerTwo(){\n  const bridgeGlobalTble = useRef(false) \n  const [decrypt] = useRecoilState(encytpKey);\n  const passwordDecrypt = AES.decrypt(localStorage.getItem('password'), decrypt);\n  const { isLoading, error, data, isFetching } = useQuery(localStorage.getItem('ip') +'pollL2Page', async () => {\n    \n    const response = await axios.post('/pollL2Page',{'ip': localStorage.getItem('ip'), 'username': localStorage.getItem('username'), \n    'password': passwordDecrypt.toString(enc.Utf8), 'port': localStorage.getItem('port')})\n    console.log(response)\n\n    try{\n        bridgeGlobalTble.current = GlobalSpanTreeHtml(response.data.globalSpan)\n      }\n    catch{}\n      \n      return response.data\n\n    },\n    {\n      refetchInterval: 5000\n    }\n)\n\nif (error){\n  return  <div>\n                <ErrorBoundary FallbackComponent={NavigationFallback}>\n                  <Navigation update={data} ip={localStorage.getItem('ip')} fetchingStatus={isFetching}/>\n                </ErrorBoundary>\n            <h4 classname=\"text-center fade-in\" style={{marginTop: 100}}>Error Collecting Data. I'll Keep Trying</h4>\n            <div classname=\"warning-loader text-center\"></div>\n        </div>\n}\nelse if (data){\n\n  return <Container fluid>\n            <ErrorBoundary FallbackComponent={NavigationFallback}>\n                <Navigation update={data} ip={localStorage.getItem('ip')} fetchingStatus={isFetching} cpu={data.cpu} mem={data.mem}/>\n            </ErrorBoundary>\n            \n                <div>\n                  <Card bg={\"dark\"} className=\"mb-3\">\n                    <Card.Body>\n                      <Tabs defaultActiveKey=\"globalvlan\" id=\"spanningtre\" bg={\"success\"}>\n                      <Tab eventKey=\"globalvlan\" title=\"Global Setting\">\n                            {bridgeGlobalTble.current}\n                          </Tab>\n                          {data.span.hasOwnProperty.key ? <Tab eventKey=\"pervlan\" title=\"Spanning Tree\">\n                          { data.span.map(instance => (<ErrorBoundary FallbackComponent={IsErrorFallback}><SpanTable span={instance}/></ErrorBoundary>))}\n                          </Tab> : <div/>}\n                      </Tabs>\n                    </Card.Body>\n                  </Card>\n                      <Row>\n                        <Col xl={12}>\n                          {CreateCard(<DpNeighbors dpNeighbors={data.dpNeighbors}/>)}\n                        </Col>\n                      </Row>\n                      <Row>\n                        <Col xl={7}>\n                            {data.vlans.length > 0 ? CreateCard(<Vlans vlans={data.vlans}/>, \"Vlans\") : <div/>}\n                        </Col>\n                        <Col xl={5}>\n                          <Row>\n                            {data.trunks.length > 0 ? CreateCard(<Trunks ports={data.trunks}/>, \"Trunks\") : <div/>}\n                          </Row>\n                          <Row>\n                              {data.access.length > 0 ? CreateCard(<AccessPorts ports={data.access}/>, \"Access Ports\"): <div/>}\n                          </Row>\n                          <Row>\n                              {data.mac_addresses.length > 0 ? CreateCard(<MacTable macs={data.mac_addresses}/>, \"MAC-Addresses\") : <div/>}\n                          </Row>\n                        </Col>\n                    </Row>\n                    </div>\n\n                     \n            </Container>\n}        \nelse if (isLoading){\n  return  <div>\n            {PageLoader(localStorage.getItem('ip'), localStorage.getItem('serial'), localStorage.getItem('model'), localStorage.getItem('uptime'), localStorage.getItem('software'))}\n          </div>\n}\n}\n\n    \n  \n  ","import React, { useEffect, useRef} from 'react';\nimport ReactSpeedometer from \"react-d3-speedometer\"\nimport Card from \"react-bootstrap/Card\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport { UpdateCpuChart, CpuTableHtml, MemTableHtml, InitialCpuChartBuild } from '../Other/chartConfigs';\nimport { CpuProcessData, MemoryData } from '../Other/tables';\nimport { CreateCard } from '../Other/jsxCard';\nconst $ = require('jquery');\n$.DataTable = require('datatables.net');\n\nexport function CpuUsage(props){\n    const cpuChart = useRef(null)\n    const cpuMemCss = useRef(null)\n    const cpuTableRef = React.createRef()\n    const proccessRef = React.createRef()\n    const memRef = React.createRef()\n    const memTable = MemTableHtml(memRef);\n    const proccessTable = CpuTableHtml(proccessRef);\n    $.fn.dataTable.ext.errMode = 'none';\n\n    if(parseInt(props.cpu['Cisco-IOS-XE-process-cpu-oper:cpu-utilization']['five-seconds']) > 25 || props.mem['memory-status'] !== 'Healthy'){\n         cpuMemCss.current = {color: 'orange', textAlign: 'center', fontSize: 40}\n    }\n    else{\n         cpuMemCss.current = {color: 'greenyellow', textAlign: 'center', fontSize: 40}\n    }\n\n    useEffect(() => {\n\n        try{\n            $(proccessRef.current).DataTable().clear()\n            $(proccessRef.current).DataTable().rows.add(props.cpu['Cisco-IOS-XE-process-cpu-oper:cpu-utilization']['cpu-usage-processes']['cpu-usage-process'])\n            $(proccessRef.current).DataTable().draw(false)\n            $(memRef.current).DataTable().clear()\n            $(memRef.current).DataTable().rows.add(props.mem)\n          }\n          catch{}\n\n      }, [props.cpu, props.mem])\n      \n    \n    useEffect(() => {\n\n        $(proccessRef.current).DataTable().destroy()\n        CpuProcessData(proccessRef.current, props.cpu['Cisco-IOS-XE-process-cpu-oper:cpu-utilization']['cpu-usage-processes']['cpu-usage-process'])\n\n        $(memRef.current).DataTable().destroy()\n        MemoryData(memRef.current, props.mem)\n        \n    }, [])\n\n    if (props.from !== 'navbar'){\n        return <div><Card bg={\"dark\"}  className=\"mb-3\">\n                   <Card.Body >\n                        <Card.Title className=\"mb-3\">CPU/Memory</Card.Title>\n                        <Row >\n                        <Col xl={3}>\n                            <h5 className=\"text-center\">Five Sec</h5>\n                                            <ReactSpeedometer\n                                                                            maxValue={100}\n                                                                            value={props.cpu['Cisco-IOS-XE-process-cpu-oper:cpu-utilization']['five-seconds']}\n                                                                            needleColor=\"red\"\n                                                                            startColor=\"green\"\n                                                                            segments={10}\n                                                                            width={200}\n                                                                            height={150}\n                                                                            ringWidth={30}\n                                                                            textColor=\"white\"\n                                                                            endColor=\"red\"\n                                                                            />\n                                                                             </Col>\n                                            <Col xl={3}>\n                                            <h5 className=\"text.center\">One Min</h5>\n                                            <ReactSpeedometer\n                                                                            maxValue={100}\n                                                                            value={props.cpu['Cisco-IOS-XE-process-cpu-oper:cpu-utilization']['one-minute']}\n                                                                            needleColor=\"red\"\n                                                                            startColor=\"green\"\n                                                                            segments={10}\n                                                                            width={200}\n                                                                            height={150}\n                                                                            ringWidth={30}\n                                                                            textColor=\"white\"\n                                                                            endColor=\"red\"\n                                                                            />\n                                                                            </Col>\n                                            <Col xl={3}>\n                                            <h5 className=\"text.center\">Five Min</h5>\n                                            <ReactSpeedometer\n                                                                            maxValue={100}\n                                                                            value={props.cpu['Cisco-IOS-XE-process-cpu-oper:cpu-utilization']['five-minutes']}\n                                                                            needleColor=\"red\"\n                                                                            startColor=\"green\"\n                                                                            segments={10}\n                                                                            width={200}\n                                                                            height={150}\n                                                                            ringWidth={30}\n                                                                            textColor=\"white\"\n                                                                            endColor=\"red\"\n                                                                            /> \n                                                                            </Col>\n                                            <Col xl={3}>\n                                            <h5 className=\"text.center\">Memory</h5>\n                                            <ReactSpeedometer\n                                                                            maxValue={100}\n                                                                            value={props.mem['used-percent']}\n                                                                            needleColor=\"red\"\n                                                                            startColor=\"green\"\n                                                                            segments={10}\n                                                                            width={200}\n                                                                            height={150}\n                                                                            ringWidth={30}\n                                                                            textColor=\"white\"\n                                                                            endColor=\"red\"\n                                                                            />\n                                                                            </Col>\n                                                                            </Row>\n\n                    </Card.Body>\n            </Card>\n            {CreateCard(memTable, \"Memory Statistics\")}\n            {CreateCard(proccessTable, \"CPU Processes\")}\n            </div>\n        }\n        else{\n            <p>{props.cpu['Cisco-IOS-XE-process-cpu-oper:cpu-utilization']['five-seconds']}<span><p style={cpuMemCss}>{props.mem['used-percent']}</p></span></p>\n\n        }\n    }\n\n        \n        \n        \n  ","import React, { useEffect } from 'react';\nimport { EnvTableHtml } from '../Other/chartConfigs';\nimport { SensorData } from '../Other/tables';\nconst $ = require('jquery');\n$.DataTable = require('datatables.net');\n\nexport  function Sensors(props){\n  const envTableRef = React.createRef()\n  const table = EnvTableHtml(envTableRef)\n  $.fn.dataTable.ext.errMode = 'none';\n\n  \n  useEffect(() => {\n    if(envTableRef.current !== null){\n      try{  \n        $(envTableRef.current).DataTable().clear()\n        $(envTableRef.current).DataTable().rows.add(Object.values(props.env))\n        $(envTableRef.current).DataTable().draw(false)\n      }\n      catch{}\n    }\n    }, [props.env])\n\n  useEffect(() => {\n    $(envTableRef.current).DataTable().destroy()\n    SensorData(envTableRef.current, props.env)\n       \n  }, [])\n\n  return table\n             \n  }\n  ","import React, { useEffect } from 'react';\r\nimport { PoeTableHtml } from '../Other/chartConfigs';\r\nimport { PoeData } from '../Other/tables';\r\nconst $ = require('jquery');\r\n$.DataTable = require('datatables.net');\r\n\r\nexport  function PoeConnections(props){\r\n  const poeTableRef = React.createRef()\r\n  const poeTable = PoeTableHtml(poeTableRef)\r\n  $.fn.dataTable.ext.errMode = 'none';\r\n\r\n  useEffect(() => {\r\n    if(poeTableRef.current !== null){\r\n      try{  \r\n        $(poeTableRef.current).DataTable().clear()\r\n        $(poeTableRef.current).DataTable().rows.add(Object.values(props.poeprops.poe))\r\n        $(poeTableRef.current).DataTable().rows.add(Object.values(props.poe))\r\n        $(poeTableRef.current).DataTable().draw(false)\r\n      }\r\n      catch{}\r\n    }\r\n    }, [props.poe])\r\n\r\n  useEffect(() => {\r\n    $(poeTableRef.current).DataTable().destroy()\r\n    PoeData(poeTableRef.current, props.poe)\r\n  }, [])\r\n\r\n  return poeTable\r\n            \r\n  }\r\n  ","import React, { useEffect } from 'react';\r\nimport { TransceiverTableHtml } from '../Other/chartConfigs';\r\nimport { TransieverData } from '../Other/tables';\r\n\r\nconst $ = require('jquery');\r\n$.DataTable = require('datatables.net');\r\n\r\nexport  function Transceivers(props){\r\n  const transceiverTableRef = React.createRef()\r\n  const transceiverOpertable = TransceiverTableHtml(transceiverTableRef)\r\n  $.fn.dataTable.ext.errMode = 'none';\r\n\r\n  useEffect(() => {\r\n    if(transceiverTableRef.current !== null){\r\n      try{  \r\n        $(transceiverTableRef.current).DataTable().clear()\r\n        $(transceiverTableRef.current).DataTable().rows.add(props.transceivers)\r\n        $(transceiverTableRef.current).DataTable().draw(false)\r\n      }\r\n      catch{}\r\n    }\r\n    }, [props.transceivers])\r\n\r\n  useEffect(() => {\r\n\r\n        $(transceiverTableRef.current).DataTable().destroy()\r\n        TransieverData(transceiverTableRef.current, props.transceivers)\r\n\r\n  }, [])\r\n\r\n  return  transceiverOpertable\r\n               \r\n  }\r\n  ","import React, { useEffect } from 'react';\r\nimport { InventoryTransceiverTableHtml } from '../Other/chartConfigs';\r\nimport { InvTransieverData } from '../Other/tables';\r\n\r\nconst $ = require('jquery');\r\n$.DataTable = require('datatables.net');\r\n\r\n\r\nexport  function TransceiversInv(props){\r\n  const inventoryTransceiverTableRef = React.createRef()\r\n  const inventorytable = InventoryTransceiverTableHtml(inventoryTransceiverTableRef)\r\n  $.fn.dataTable.ext.errMode = 'none';\r\n\r\n  useEffect(() => {\r\n    if(inventoryTransceiverTableRef.current !== null){\r\n      try{  \r\n        $(inventoryTransceiverTableRef.current).DataTable().clear()\r\n        $(inventoryTransceiverTableRef.current).DataTable().rows.add(props.transceivers)\r\n        $(inventoryTransceiverTableRef.current).DataTable().draw(false)\r\n      }\r\n      catch{}\r\n    }\r\n    }, [props.transceivers])\r\n\r\n  useEffect(() => {\r\n\r\n        $(inventoryTransceiverTableRef.current).DataTable().destroy()\r\n        InvTransieverData(inventoryTransceiverTableRef.current, props.transceivers)\r\n       \r\n  }, [])\r\n\r\n  return  inventorytable\r\n                \r\n  }\r\n  ","import React from 'react';\nimport { useQuery } from 'react-query';\nimport axios from 'axios';\nimport Row from \"react-bootstrap/Row\";\nimport Container from \"react-bootstrap/Container\";\nimport Col from \"react-bootstrap/Col\";\nimport {useRecoilState} from 'recoil';\nimport { CpuUsage} from './cpuUsages'\nimport { Sensors} from './sensors'\nimport { ErrorBoundary } from  'react-error-boundary'\nimport { CreateCard } from '../Other/jsxCard';\nimport { Navigation } from '../Other/navbar';\nimport { NavigationFallback } from \"../Other/navbarError\";\nimport { IsErrorFallback } from \"../Other/errorComponent\";\nimport { PoeConnections } from './poe'\nimport { Transceivers } from './transceivers'\nimport { TransceiversInv } from './transieverInventory'\nimport {AES, enc}from 'crypto-js';\nimport {encytpKey}  from '../../App'\nimport { PageLoader } from '../Other/pageLoader';\n\n\nexport function Environment(){\n  const [decrypt] = useRecoilState(encytpKey);\n  const passwordDecrypt = AES.decrypt(localStorage.getItem('password'), decrypt);\n  const { isLoading, error, data, isFetching } = useQuery(localStorage.getItem('ip') + 'pollEnv', async () => {\n    const response = await axios.post('/pollEnv', {'ip': localStorage.getItem('ip'), 'username': localStorage.getItem('username'), \n    'password': passwordDecrypt.toString(enc.Utf8), 'port': localStorage.getItem('port')})\n\n    return response.data\n\n    },\n    {\n      refetchInterval: 10000\n    }\n)\n\n\n    if (error){\n      return  <div>\n                <ErrorBoundary FallbackComponent={NavigationFallback}>\n                  <Navigation update={data} ip={localStorage.getItem('ip')} fetchingStatus={isFetching}/>\n                </ErrorBoundary>\n                <h4 classname=\"text-center fade-in\" style={{marginTop: 100}}>Error Collecting Data. I'll Keep Trying</h4>\n                <div classname=\"warning-loader text-center\"></div>\n              </div>\n    }\n    else if (data){\n          return  <Container fluid>\n                      <ErrorBoundary FallbackComponent={NavigationFallback}>\n                          <ErrorBoundary  FallbackComponent={IsErrorFallback}><Navigation update={data} ip={localStorage.getItem('ip')} fetchingStatus={isFetching} cpu={data.cpu} mem={data.mem}/></ErrorBoundary>\n                      </ErrorBoundary>\n                      <Row>\n                          <Col xl={8}>\n                          <ErrorBoundary FallbackComponent={IsErrorFallback}>\n                            <CpuUsage cpu={data.cpu} mem={data.mem}/>\n                          </ErrorBoundary>\n                          {CreateCard(<Transceivers transceivers={data.transceivers}/>, \"SFP Statuses\")}  \n                          </Col>\n                        <Col xl={4}>\n                          {CreateCard(<Sensors env={data.env}/>, 'Environmental Stats')}\n                          {CreateCard(<PoeConnections poe={data.poe}/>, 'Poe Interface')}\n                          {CreateCard(<TransceiversInv transceivers={data.transceivers}/>, \"SFP Inventory\")}\n                        </Col>\n                      </Row>\n                  </Container>\n        }\n    else if (isLoading){\n      return  <div>\n                {PageLoader(localStorage.getItem('ip'), localStorage.getItem('serial'), localStorage.getItem('model'), localStorage.getItem('uptime'), localStorage.getItem('software'))}\n              </div>\n    }\n    \n\n\n  }\n    \n  \n  \n","\r\nimport router from '../Images/router.png';\r\nimport { Network } from \"vis-network\";\r\n\r\nvar font = { size: 15, strokeWidth: 0, color: 'white'}\r\nvar arrowEnabled = {enabled: true}\r\nvar nodeFont = { size: 16, color: \"white\"}\r\nvar options = {\r\n  nodes: {\r\n    shape: 'image',\r\n    image: router,\r\n    size: 35,\r\n    color: {\r\n      border: 'black',\r\n      background: '#166F20',\r\n      highlight: {\r\n        border: '#2B7CE9',\r\n        background: '#D2E5FF'\r\n          }\r\n        }\r\n      },\r\n    layout: {\r\n      randomSeed: undefined,\r\n      improvedLayout:true,\r\n      clusterThreshold: 150,\r\n      hierarchical: {\r\n        enabled:true,\r\n        levelSeparation: 500,\r\n        treeSpacing: 150,\r\n        edgeMinimization: true,\r\n        parentCentralization: true,\r\n        direction: 'LR',        // UD, DU, LR, RL\r\n        sortMethod: 'hubsize',  // hubsize, directed\r\n        shakeTowards: 'roots'  // roots, leaves\r\n          }\r\n      },\r\n      physics:{\r\n      enabled: true,\r\n      hierarchicalRepulsion: {\r\n        centralGravity: 0.0,\r\n        springLength: 0,\r\n        springConstant: 0.01,\r\n        nodeDistance: 200,\r\n        damping: 1,\r\n        avoidOverlap: 1\r\n      },\r\n    },\r\n\r\n}\r\n\r\n\r\nexport function UpdateBgpTopology(ref, neighbors, routerId){\r\n\r\n  \r\n  Object.entries(neighbors).forEach((details, i) => {\r\n    if(details[1].state ==='established'){\r\n      ref.body.data.edges.update({\r\n        \r\n      id: details[1]['neighbor-id'],\r\n      from: routerId, \r\n      to: details[1]['neighbor-id'], \r\n      label: details[1].state,\r\n      color: 'green', \r\n      font: font, \r\n      arrows:{to: arrowEnabled, from: arrowEnabled}});\r\n  }\r\n  else{\r\n      ref.body.data.edges.update({\r\n        \r\n      id: details[1]['neighbor-id'],\r\n      from: routerId, \r\n      to: details[1]['neighbor-id'], \r\n      color: 'yellow', \r\n      label: details[1].state, \r\n      font: font, \r\n      arrows:{to: arrowEnabled, from: arrowEnabled}\r\n      });\r\n  }\r\n})\r\n\r\n  return ref\r\n}\r\n\r\n\r\nexport function BgpTopologyBuild(ref, neighbors, localAs, routerId, prefixes, topology){\r\n\r\n    const nodes = []\r\n    const edges = []\r\n\r\n    nodes.push({id: routerId, \r\n                label: routerId + '\\nAS: ' + localAs, \r\n                font: nodeFont\r\n                })\r\n\r\n    Object.entries(topology).forEach((neighbor, details) => {\r\n\r\n      nodes.push({id: neighbor[0], \r\n                  label: neighbor[0] + '\\nAS: ' + neighbor[1], \r\n                  font:nodeFont\r\n                  })\r\n    })\r\n\r\n    Object.entries(neighbors).forEach((details, i) => {\r\n      if(details[1].state ==='established'){\r\n\r\n          edges.push({id: details[1]['neighbor-id'], \r\n                      from: routerId, \r\n                      to: details[1]['neighbor-id'], \r\n                      color: 'green', \r\n                      label: details[1].state,\r\n                      font: font, \r\n                      arrows:{to: arrowEnabled, from: arrowEnabled}\r\n                    });\r\n    }\r\n    else{\r\n        edges.push({id: details[1]['neighbor-id'],\r\n                    from: routerId, \r\n                    to: details[1]['neighbor-id'], \r\n                    color: 'yellow', \r\n                    label: details[1].state, \r\n                    font: font, \r\n                    arrows:{to: arrowEnabled, from: arrowEnabled}\r\n                    });\r\n                  }\r\n    })\r\n\r\n    var data = {\r\n      nodes: nodes,\r\n      edges: edges,\r\n    };\r\n\r\n    var network = new Network(ref, data, options);\r\n    \r\n    return  network\r\n\r\n    }\r\n\r\nexport function UpdateOspfTopology(ref, neighbors, topology){\r\n\r\n  Object.entries(neighbors).forEach((details, i) => {\r\n    if(details[1].state ==='ospf-nbr-full'){\r\n\r\n      ref.body.data.edges.update({id: details[1]['neighbor-id'],\r\n                                  from: topology[1], \r\n                                  to: details[1]['neighbor-id'], \r\n                                  color: 'green', label: \r\n                                  details[1].state, \r\n                                  font: font, \r\n                                  arrows:{to: arrowEnabled, from: arrowEnabled}});\r\n    }\r\n    else{\r\n        ref.body.data.edges.update({id: details[1]['neighbor-id'],\r\n                                    from: topology[1], \r\n                                    to: details[1]['neighbor-id'], \r\n                                    color: 'yellow', \r\n                                    label: details[1].state, \r\n                                    font: font, \r\n                                    arrows:{to: arrowEnabled, from: arrowEnabled}\r\n                                    });\r\n    }})\r\n      return ref\r\n    }\r\n\r\n\r\nexport function OspfTopologyBuild(ref, neighbors, topology){\r\n\r\n    const nodes = []\r\n    const edges = []\r\n\r\n    nodes.push({id: topology[1], label: topology[1], font: nodeFont})\r\n    \r\n    Object.entries(topology[0]).forEach((neighbor, details) => {\r\n\r\n      nodes.push({id: neighbor[0], \r\n                  label: neighbor[0], \r\n                  font: nodeFont\r\n                  })\r\n    })\r\n\r\n    Object.entries(neighbors).forEach((details, i) => {\r\n    if(details[1].state ==='ospf-nbr-full'){\r\n\r\n          edges.push({id: details[1]['neighbor-id'], \r\n                      from: topology[1], \r\n                      to: details[1]['neighbor-id'], \r\n                      color: 'green', \r\n                      label: details[1].state + '\\nArea: ' + details[1]['area'], \r\n                      font: font, \r\n                      arrows:{to:arrowEnabled,from:arrowEnabled}\r\n                    });\r\n    }\r\n    else{\r\n        edges.push({id: details[1]['neighbor-id'],\r\n                    from: topology[1], \r\n                    to: details[1]['neighbor-id'], \r\n                    color: 'yellow', \r\n                    label: details[1].state + '\\nArea: ' + details[1]['area'], \r\n                    font: font, \r\n                    arrows:{to: {arrowEnabled}, from: {arrowEnabled}}\r\n                    });\r\n                  }\r\n    })\r\n\r\n    var data = {\r\n      nodes: nodes,\r\n      edges: edges,\r\n    };\r\n    console.log(ref)\r\n    var network = new Network(ref, data, options);\r\n    \r\n    return  network\r\n\r\n    }\r\n    \r\n","import React, { useEffect, useRef } from 'react';\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport { OpsfIntsTableHtml } from '../Other/chartConfigs';\r\nimport { OspfData} from '../Other/tables';\r\nimport { OspfTopologyBuild, UpdateOspfTopology } from './topology';\r\nconst $ = require('jquery');\r\n$.DataTable = require('datatables.net');\r\n\r\nexport  function Ospf(props){\r\n  const ospfTableRef = React.createRef()\r\n  const ospfIntsTableRef = React.createRef()\r\n  const ospfTopologyRef = React.createRef()\r\n  const ospfTopology = useRef(null)\r\n  const ospfIntTable = OpsfIntsTableHtml(ospfIntsTableRef)\r\n  $.fn.dataTable.ext.errMode = 'none';\r\n\r\n  useEffect(() => {\r\n    if(ospfTableRef.current !== null){\r\n    \r\n      try{\r\n        $(ospfIntsTableRef.current).DataTable().clear()\r\n        $(ospfIntsTableRef.current).DataTable().rows.add(Object.values(props.interfaces))\r\n        $(ospfIntsTableRef.current).DataTable().draw(false)\r\n      }\r\n      catch{}\r\n\r\n      try{\r\n        if(props.topology.length >= 1){\r\n          ospfTopology.current = UpdateOspfTopology(ospfTopology.current, props.neighbors, props.topology)\r\n          ospfTopologyRef.current =  ospfTopology.current\r\n        }\r\n      }\r\n      catch(e){}\r\n    }\r\n    }, [props.neighbors])\r\n\r\n  useEffect(() => {\r\n\r\n        OspfData(ospfIntsTableRef.current, props.interfaces)\r\n         \r\n        try{\r\n          if(props.interfaces.length >= 1){\r\n            ospfTopology.current = OspfTopologyBuild(ospfTopologyRef.current, props.neighbors, props.topology)\r\n            ospfTopologyRef.current =  ospfTopology.current\r\n          }\r\n        }\r\n        catch{}\r\n\r\n      }, [])\r\n  \r\n    return <Card bg={\"dark\"}>\r\n                {<Card.Body>\r\n                  <Card.Title className=\"mb-3\">OSPF Interfaces/Neighbors</Card.Title>\r\n                  {ospfIntTable}\r\n                </Card.Body>}\r\n                <Row>\r\n                  <Col>\r\n                    {props.interfaces.length >= 1 ? <div ref={ospfTopologyRef} className=\"bg-dark  mt-3\" style={{width: '100%', height: '300px'}}/> : <div/>}\r\n                    </Col>\r\n                </Row>\r\n              </Card>\r\n  }\r\n  ","import React, { useEffect, useRef } from 'react';\nimport Card from \"react-bootstrap/Card\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport { CreateCard } from '../Other/jsxCard';\nimport { BgpTableHtml } from '../Other/chartConfigs';\nimport { BgpData } from '../Other/tables';\nimport { BgpTopologyBuild, UpdateBgpTopology } from './topology';\nconst $ = require('jquery');\n$.DataTable = require('datatables.net');\n\nexport  function Bgp(props){\n  const bgpTableRef = React.createRef()\n  const bgpTopologyRef = React.createRef()\n  const bgpTopology = useRef(null)\n  const bgpTable = BgpTableHtml(bgpTableRef)\n  $.fn.dataTable.ext.errMode = 'none';\n\n  useEffect(() => {\n    if(bgpTableRef.current !== null){\n      try{\n        $(bgpTableRef.current).DataTable().clear()\n        $(bgpTableRef.current).DataTable().rows.add(props.neighbors)\n        $(bgpTableRef.current).DataTable().draw(false)\n      }\n      catch{}\n      try{\n        bgpTopology.current = UpdateBgpTopology(bgpTopology.current, props.neighbors, props.details[2])\n        bgpTopologyRef.current =  bgpTopology.current\n      }\n      catch{}\n      }\n    }, [props.neighbors])\n\n  useEffect(() => {\n  \n    $(bgpTableRef.current).DataTable().destroy()\n    BgpData(bgpTableRef.current, props.neighbors)\n\n    try{\n      if(props.neighbors.length >= 1){\n        bgpTopology.current = BgpTopologyBuild(bgpTopologyRef.current, props.neighbors, props.details[0], props.details[2], props.details[5], props.topology)\n        bgpTopologyRef.current =  bgpTopology.current\n      }\n    }\n    catch{}\n\n  }, [])\n\n  if(props.neighbors.length !== 0){\n    return   <Row>\n              <Col lg={4}>\n                <Card bg={\"dark\"}>\n                  <Card.Body>\n                    <Card.Title className=\"mb-3\">Local AS: {props.details[0]}</Card.Title>\n                      <Row>\n                          <Col lg={6}>\n                              <p className=\"card-text\">Vrf-Name:</p>\n                              <p className=\"card-text\">Router-Id:</p>\n                              <p className=\"card-text\">BGP Table Ver.:</p>\n                              <p className=\"card-text\">Routing Table Ver.:</p>\n                              <p className=\"card-text\">Total Prefixes:</p>\n                              <p className=\"card-text\">Path Entries:</p>\n                              <p className=\"card-text\">AS Path Ent.</p>\n                              <p className=\"card-text\">Route-Map Ent.</p>\n                              <p className=\"card-text\">Filter-List Ent.:</p>\n                              <p className=\"card-text\">Total Memory:</p>\n                          </Col>\n                          <Col xl={6}>\n                              <p className=\"card-text\">{props.details[1]}</p>\n                              <p className=\"card-text\">{props.details[2]}</p>\n                              <p className=\"card-text\">{props.details[3]}</p>\n                              <p className=\"card-text\">{props.details[4]}</p>\n                              <p className=\"card-text\">{props.details[5]}</p>\n                              <p className=\"card-text\">{props.details[7]}</p>\n                              <p className=\"card-text\">{props.details[9]}</p>\n                              <p className=\"card-text\">{props.details[11]}</p>\n                              <p className=\"card-text\">{props.details[13]}</p>\n                              <p className=\"card-text\">{props.details[19]}</p>\n                          </Col>\n                        </Row>\n                      </Card.Body>\n                    </Card>\n                    </Col>\n                    <Col lg={8}>\n                        <Row >\n                          {CreateCard(bgpTable, \"BGP Neighbors\")}\n                        </Row>\n                        <Row>\n                            <div ref={bgpTopologyRef} className=\"bg-dark\" style={{width: '1500px', height: '300px'}}/>\n                        </Row>\n                      </Col>\n                    </Row>\n                        \n\n  }\n  else{\n    return  <div className=\"card text-white bg-dark \">\n            <div className=\"card-body\">\n            <h4 classname=\"card-title mb-3\">BGP Neighbors</h4>\n                {bgpTable}\n            </div>\n        </div>\n  }\n            \n  }\n  \n","import React from 'react';\nimport axios from 'axios';\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport {useRecoilState} from 'recoil';\nimport { Ospf } from './ospf';\nimport { Bgp } from './bgp';\nimport { Navigation } from '../Other/navbar'\nimport { useQuery } from 'react-query';\nimport { ErrorBoundary } from  'react-error-boundary'\nimport {AES, enc}from 'crypto-js';\nimport {encytpKey}  from '../../App'\nimport { NavigationFallback } from \"../Other/navbarError\";\nimport { PageLoader } from '../Other/pageLoader';\n\nexport  function Routing(){\n    const [decrypt] = useRecoilState(encytpKey);\n    const passwordDecrypt = AES.decrypt(localStorage.getItem('password'), decrypt);\n    const { isLoading, error, data, isFetching } = useQuery(localStorage.getItem('ip') + 'pollRouting', async () => {\n    const response = await axios.post('/pollRouting',{'ip': localStorage.getItem('ip'), 'username': localStorage.getItem('username'), \n    'password': passwordDecrypt.toString(enc.Utf8), 'port': localStorage.getItem('port')})\n    return response.data\n\n    },\n    {\n    refetchInterval: 5000,\n    }\n  )\n\n  if (error){\n    return  <div>\n                <ErrorBoundary FallbackComponent={NavigationFallback}>\n                  <Navigation update={data} ip={localStorage.getItem('ip')} fetchingStatus={isFetching}/>\n                </ErrorBoundary>\n                <h4 classname=\"text-center fade-in\" style={{marginTop: 100}}>Error Collecting Data. I'll Keep Trying</h4>\n                <div classname=\"warning-loader text-center\"></div>\n            </div>\n}\nelse if (data){\n    return <Container fluid>\n                    <ErrorBoundary FallbackComponent={NavigationFallback}>\n                          <Navigation update={data} ip={localStorage.getItem('ip')} fetchingStatus={isFetching} cpu={data.cpu} mem={data.mem}/>\n                    </ErrorBoundary>\n                    <Row className=\"mb-3\">\n                        <Col xl>\n                        <ErrorBoundary  FallbackComponent={NavigationFallback}>\n                             <Ospf neighbors={data.ospf} interfaces={data.ospfInts} topology={data.ospfTopology}/>\n                        </ErrorBoundary>\n                        </Col>\n                    </Row>\n                    <Row className=\"mb-3 mt-3\">\n                        <Col xl>\n                        <ErrorBoundary  FallbackComponent={NavigationFallback}>\n                            <Bgp neighbors={data.bgp} details={data.bgpDetails} topology={data.bgpTopology}/>\n                        </ErrorBoundary>\n                        </Col>\n                    </Row>\n                </Container>\n}\nelse if (isLoading){\n    return  <div>\n                {PageLoader(localStorage.getItem('ip'), localStorage.getItem('serial'), localStorage.getItem('model'), localStorage.getItem('uptime'), localStorage.getItem('software'))}\n            </div>\n}\n\n}\n    \n  \n  ","import router from '../Images/router.png';\r\nimport { Network } from \"vis-network\";\r\n\r\nvar font = { size: 18, strokeWidth: 0, color: 'white'}\r\nvar Hubfont = { size: 18, strokeWidth: 0, color: 'orange'}\r\nvar nodeFont = { size: 16, color: \"white\"}\r\nvar options = {\r\n  nodes: {\r\n    shape: 'image',\r\n    image: router,\r\n    size: 35,\r\n    color: {\r\n      border: 'black',\r\n      background: '#166F20',\r\n      highlight: {\r\n        border: '#2B7CE9',\r\n        background: '#D2E5FF'\r\n          }\r\n        }\r\n      },\r\n    layout: {\r\n      randomSeed: undefined,\r\n      improvedLayout:true,\r\n      clusterThreshold: 200,\r\n      hierarchical: {\r\n        enabled:true,\r\n        levelSeparation: 500,\r\n        treeSpacing: 300,\r\n        edgeMinimization: true,\r\n        parentCentralization: true,\r\n        direction: 'DU',        // UD, DU, LR, RL\r\n        sortMethod: 'hubsize',  // hubsize, directed\r\n        shakeTowards: 'roots'  // roots, leaves\r\n          }\r\n      },\r\n      physics:{\r\n      enabled: true,\r\n      hierarchicalRepulsion: {\r\n        centralGravity: 0.0,\r\n        springLength: 0,\r\n        springConstant: 0.01,\r\n        nodeDistance: 250,\r\n        damping: 1,\r\n        avoidOverlap: 1\r\n      },\r\n    },\r\n\r\n}\r\n\r\nexport function UpdateDmvpnTopology(ref, peers, localIp){\r\n           \r\n    Object.entries(peers).forEach((details, i) => {\r\n      if (details[1].state !== 'UP'){\r\n        ref.body.data.edges.push({id: details[1].peerNbma, \r\n                        from: localIp, \r\n                        to: i, \r\n                        color: 'yellow',\r\n                        label: details[1].state + '\\n' + details[1].peerTunnel + \"\\n\" + details[1].attrb, \r\n                        font: font\r\n                        });\r\n            }\r\n            else{\r\n              ref.body.data.edges.push({id: details[1].vlanInt, \r\n                    from: localIp, \r\n                    to: i, \r\n                    color: 'green',\r\n                    label: details[1].state + '\\n' + details[1].peerTunnel + \"\\n\" + details[1].attrb, \r\n                    font: font\r\n                    });\r\n            }})\r\n    \r\n    return  ref\r\n\r\n    }\r\n\r\nexport function DmvpnTopologyBuild(ref, peers, localIp, hubs){\r\n\r\n    const nodes = []\r\n    const edges = []\r\n\r\n    nodes.push({id: localIp, label: 'Local\\n' + localIp, font: nodeFont })\r\n\r\n    Object.entries(peers).forEach((details, i) => {\r\n\r\n        if (hubs.some(ip => ip.hubNbma === details[1].peerNbma)){\r\n          const spookeOrHub = details[1].peerNbma + ': Hub'\r\n          nodes.push({id: details[0], label: spookeOrHub, font: Hubfont});\r\n        }\r\n        else{\r\n          const spookeOrHub = details[1].peerNbma + ': Spoke'\r\n          nodes.push({id: details[0], label: spookeOrHub, font: font});\r\n        }\r\n\r\n        \r\n    })\r\n\r\n    Object.entries(peers).forEach((details, i) => {\r\n\r\n\r\n          if (details[1].state !== 'UP'){\r\n                edges.push({id: details[1].peerNbma, \r\n                  from: localIp, \r\n                  to: i, \r\n                  color: 'yellow',\r\n                  label: details[1].state + '\\n' + details[1].peerTunnel + \"\\n\" + details[1].attrb, \r\n                  font: font\r\n                  });\r\n          }\r\n          else{\r\n              edges.push({id: details[1].peerNbma, \r\n                  from: localIp, \r\n                  to: i, \r\n                  color: 'green',\r\n                  label: details[1].state + '\\n' + details[1].peerTunnel + \"\\n\" + details[1].attrb, \r\n                  font: font\r\n                  });\r\n          }})\r\n\r\n          var network = new Network(ref, {nodes: nodes, edges: edges}, options);\r\n    \r\n    return  network\r\n\r\n    }","import React, { useEffect, useRef} from 'react';\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport Card from \"react-bootstrap/Card\";\nimport Container from \"react-bootstrap/Container\";\nimport { DmvpnTableHtml, DmvpnInterfacesTableHtml, TunnelInterfacesTableHtml, DmvpnHubsTableHtml, NbmaLocationTableHtml } from '../Other/chartConfigs';\nimport { DmvpnTopologyBuild, UpdateDmvpnTopology } from './topology';\nimport { CreateCard } from '../Other/jsxCard';\nconst $ = require('jquery');\n$.DataTable = require('datatables.net');\n\nexport  function DmvpnData(props){\n  const dmvpnTopologyRef = React.createRef();\n  const dmvpnTableRef = React.createRef();\n  const dmvpnTopology = useRef(null);\n  const dmvpnTable = DmvpnTableHtml(dmvpnTableRef);\n\n  const dmvpnInterfacesTableRef = React.createRef()\n  const dmvpnInterfacestable = DmvpnInterfacesTableHtml(dmvpnInterfacesTableRef)\n\n  const tunnelInterfacesTableRef = React.createRef()\n  const tunnelInterfacestable = TunnelInterfacesTableHtml(tunnelInterfacesTableRef)\n\n  const dmvpnHubsTableRef = React.createRef()\n  const dmvpnHubs = DmvpnHubsTableHtml(dmvpnHubsTableRef)\n\n  const nbmaTableRef = React.createRef()\n  const nmbaIps = NbmaLocationTableHtml(nbmaTableRef)\n\n  $.fn.dataTable.ext.errMode = 'none';\n\n  useEffect(() => {\n    if(dmvpnTableRef.current !== null){\n    \n      try{\n        $(dmvpnTableRef.current).DataTable().clear()\n        $(dmvpnTableRef.current).DataTable().rows.add(Object.values(props.dmvpn))\n        $(dmvpnTableRef.current).DataTable().draw(false)\n      }\n      catch{}\n      try{\n        $(tunnelInterfacesTableRef.current).DataTable().clear()\n        $(tunnelInterfacesTableRef.current).DataTable().rows.add(Object.values(props.dmvpnInts[1]))\n        $(tunnelInterfacesTableRef.current).DataTable().draw(false)\n      }\n      catch{}\n      try{\n        $(dmvpnInterfacesTableRef.current).DataTable().clear()\n        $(dmvpnInterfacesTableRef.current).DataTable().rows.add(Object.values(props.dmvpnInts[2]))\n        $(dmvpnInterfacesTableRef.current).DataTable().draw(false)\n      }\n      catch{}\n      try{\n        $(dmvpnHubsTableRef.current).DataTable().clear()\n        $(dmvpnHubsTableRef.current).DataTable().rows.add(Object.values(props.hubs))\n        $(dmvpnHubsTableRef.current).DataTable().draw(false)\n      }\n      catch{}\n      try{\n\tif(props.locations.length !== 0){\n        \t$(nbmaTableRef.current).DataTable().clear()\n        \t$(nbmaTableRef.current).DataTable().rows.add(Object.values(props.locations))\n        \t$(nbmaTableRef.current).DataTable().draw(false)\n\t}\n      }\n      catch{}\n\n      try{\n        dmvpnTopology.current = UpdateDmvpnTopology(dmvpnTopologyRef.current, props.dmvpn)\n        dmvpnTopologyRef.current =  dmvpnTopology.current\n      }\n      catch{}\n    }\n    }, [props.dmvpn])\n\n\n  useEffect(() => {\n\n    $(dmvpnHubsTableRef.current).DataTable().destroy()\n    $(dmvpnHubsTableRef.current).DataTable({\n        data: props.hubs\n        ,language: {\n            emptyTable: \"No DMVPN Hubs Found\"\n        },\n        columns:  [\n            { data: 'hubNbma' },\n            { data: 'tunnel' },\n        ]\n        }); \n\n    $(dmvpnTableRef.current).DataTable().destroy()\n    $(dmvpnTableRef.current).DataTable({\n        data: props.dmvpn\n        ,language: {\n            emptyTable: \"No DMVPN Topology Found\"\n        },\n        columns:  [\n            { data: 'peerNbma' },\n            { data: 'peerTunnel' },\n            { data: 'state' },\n            { data: 'upTime' },\n            { data: 'attrb' },\n        ]\n        }); \n        \n        try{\n          if(props.dmvpn.length >= 1){\n            dmvpnTopology.current = DmvpnTopologyBuild(dmvpnTopologyRef.current, props.dmvpn, props.localIp, props.hubs)\n            dmvpnTopologyRef.current =  dmvpnTopology.current\n          }\n        }\n        catch{}\n\n        $(dmvpnInterfacesTableRef.current).DataTable().destroy()\n        $(dmvpnInterfacesTableRef.current).DataTable({\n        data: props.dmvpnInts[2]\n        ,language: {\n            emptyTable: \"No DMVPN Topology Found\"\n        },\n        columns:  [\n            { data: 'name' },\n            { data: 'source' },\n            { data: 'mtu' },\n            { data: 'mss' },\n            { data: 'mode' },\n            { data: 'authentication' },\n            { data: 'holdtime' },\n            { data: 'protection' },\n            { data: 'network-id' }\n        ]\n        }); \n\n        $(nbmaTableRef.current).DataTable().destroy()\n        $(nbmaTableRef.current).DataTable({\n        data: props.locations\n        ,language: {\n            emptyTable: \"You May Have Reached IPAPI Query Limits\"\n        },\n        columns:  [\n            { data: 'ip' },\n            { data: 'country_code' },\n            { data: 'city' },\n            { data: 'continent_code' },\n            { data: 'latitude' },\n            { data: 'longitude' },\n            { data: 'org' },\n            { data: 'asn' },\n            { data: 'timezone' },\n        ]\n        }); \n\n        try{\n          $(tunnelInterfacesTableRef.current).DataTable().destroy()\n            $(tunnelInterfacesTableRef.current).DataTable({\n              data: props.dmvpnInts[1],\n              language: {\n                emptyTable: \"No DMVPN Found\"\n              },\n              columns:  [\n                { data: 'name'},\n                { data: 'oper-status'},\n                { data: 'description' },\n                { data: 'ipv4' },\n                { data: 'ipv4-subnet-mask'},\n                { data: 'speed' },\n                { data: 'statistics.tx-kbps'},\n                { data: 'statistics.rx-kbps'},\n            ],\n              \n            fnRowCallback: function (nRow, aData) {\n                \n                try{\n                    $('td:eq(5)', nRow).html(Math.round(aData['data']['speed'] / 1000000000) * 1000 )\n                    $('td:eq(5)', nRow).addClass()\n                  }\n                catch(e){\n                  console.log(e)\n                }\n            }});\n          }\n          catch{}\n\n    }, [])\n\nif(props.dmvpn.length !== 0){\n\n    return  <Container fluid>\n                    <Card bg={\"dark\"} className=\"mt-3 mb-3\">\n                        <Card.Body>\n                        <Card.Title className=\"mb-3\">DMVPN Peers</Card.Title>\n                        <Row>\n                          <Col xl={6}>\n                                {dmvpnTable}\n                          </Col>\n                          <Col xl={6}>\n                            <div ref={dmvpnTopologyRef} className=\"bg-dark\" style={{width: '100%', height: '500px'}}/>\n                          </Col>\n                          </Row>\n                        </Card.Body>\n                      </Card>\n                      {CreateCard(tunnelInterfacestable, \"Tunnel Interfaces\")}\n                    <Row>\n                      <Col xl={8}>\n                        {CreateCard(dmvpnInterfacestable, \"DMVPN Interfaces\")}\n                        </Col>\n                      <Col xl={4}>\n                        {CreateCard(dmvpnHubs, \"DMVPN Hubs\")}\n                      </Col>\n                      <Col xl>\n                        {CreateCard(nmbaIps, \"NBMA Assignments\")}\n                      </Col>\n                    </Row>\n                    <div>               \n                  </div>\n            </Container>\n                    \n  }\nelse{\n    return  <Row>\n                <Col>\n                  {CreateCard(dmvpnTable, \"DMVPN Interfaces\")}\n                </Col>\n            </Row>\n  }\n\n  }\n  ","import React from 'react';\nimport axios from 'axios';\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport {AES, enc} from 'crypto-js';\nimport {useRecoilState} from 'recoil';\nimport { ErrorBoundary } from  'react-error-boundary'\nimport { Ospf } from '../LayerThree/ospf';\nimport { Navigation } from '../Other/navbar';\nimport { DmvpnData } from './dmvpnData';\nimport { useQuery } from 'react-query';\nimport {encytpKey}  from '../../App'\nimport { NavigationFallback } from \"../Other/navbarError\";\nimport { IsErrorFallback } from \"../Other/errorComponent\";\nimport { PageLoader } from '../Other/pageLoader';\n\nexport  function Dmvpn(){\n    const [decrypt] = useRecoilState(encytpKey);\n    const passwordDecrypt = AES.decrypt(localStorage.getItem('password'), decrypt);\n    const { isLoading, error, data, isFetching } = useQuery(localStorage.getItem('ip') + 'getDmvpn', async () => {\n\n        const response = await axios.post('/getDmvpn',{'ip': localStorage.getItem('ip'), 'username': localStorage.getItem('username'), \n        'password': passwordDecrypt.toString(enc.Utf8), 'port': localStorage.getItem('port')})\n        console.log(response.data)\n\n        return response.data\n\n        },\n        {\n        refetchInterval: 20000\n        }\n  )\n\n\n  if (error){\n    return  <div>\n                <ErrorBoundary FallbackComponent={NavigationFallback}>\n                  <Navigation update={data} ip={localStorage.getItem('ip')} fetchingStatus={isFetching}/>\n                </ErrorBoundary>\n                <h4 classname=\"text-center fade-in\" style={{marginTop: 100}}>Error Collecting Data. I'll Keep Trying</h4>\n                <div classname=\"warning-loader text-center\"></div>\n            </div>\n}\nelse if (data){\n    return <Container fluid>\n                <ErrorBoundary FallbackComponent={NavigationFallback}>\n                      <ErrorBoundary  FallbackComponent={IsErrorFallback}><Navigation update={data} ip={localStorage.getItem('ip')} fetchingStatus={isFetching} cpu={data.cpu} mem={data.mem}/></ErrorBoundary>\n                </ErrorBoundary>\n                <Row className=\"mb-3\">\n                        <Col xl>\n                        <ErrorBoundary FallbackComponent={IsErrorFallback}>\n                            <DmvpnData dmvpn={data.dmvpn} dmvpnInts={data.dmvpnInts} hubs={data.hubs} locations={data.location} routing={data.routing} localIp={localStorage.getItem('ip')}/>\n                        </ErrorBoundary>\n                        </Col>\n                    </Row>\n                    <Row className=\"mb-3\">\n                        <Col xl>\n                        <ErrorBoundary  FallbackComponent={IsErrorFallback}>\n                            {data.dmvpn.length > 0 ? <Ospf neighbors={data.ospf} interfaces={data.ospfInts} topology={data.ospfTopology}/> : <div/>}\n                        </ErrorBoundary>\n                        </Col>\n                    </Row>\n                </Container>\n}\nelse if (isLoading){\n    return  <div>\n                {PageLoader(localStorage.getItem('ip'), localStorage.getItem('serial'), localStorage.getItem('model'), localStorage.getItem('uptime'), localStorage.getItem('software'))}\n            </div>\n}\n\n\n}\n    \n  \n  \n","import React, { useState, useEffect } from 'react';\nimport { ApiCheck } from './promises'\nimport Nav from \"react-bootstrap/Nav\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport { Link } from \"react-router-dom\";\n\nexport  function Navigation(props){\n  const [apiStatus, setApiStatus] = useState(true)\n\n  useEffect(() => {\n    (async () => {\n      try{\n        let apiStatus = await ApiCheck()\n        if(apiStatus.status === 200)\n            setApiStatus(true)\n        else{\n            setApiStatus(false)\n        }\n    }\n    catch{\n        setApiStatus(false)\n    }\n\n    })()\n    }, [props.update])\n\n  return  <Row xl className=\"mt-3\">\n            <Navbar expand=\"lg\" >\n                <Container fluid>\n                <Navbar.Brand href=\"#home\" className=\"disabledCursor\">XE Ops</Navbar.Brand>\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"me-auto\">\n                        <Link className=\"nav-link text-light\" to=\"/index\">Home</Link>\n                        <Link className=\"nav-link text-light\" to=\"/layerTwo\">LayerTwo</Link>\n                        <Link className=\"nav-link text-light\" to=\"/routing\">Routing</Link>\n                        <Link className=\"nav-link text-light\" to=\"/environment\">Env</Link>\n                        <Link className=\"nav-link text-light\" to=\"/dmvpn\">DMVPN</Link>\n                        <Link className=\"nav-link text-light\" to='/ipslas'>IP Slas</Link>\n                        <Link className=\"nav-link text-light\" to=\"/ribstatus\">RibStatus</Link>\n                        <Link className=\"nav-link text-light\" to=\"/live_interfaces\">Live-Interfaces</Link>\n                        <Link className=\"nav-link text-light\" to=\"/config\">Cfg/Oper</Link>\n                        <Link className=\"nav-link text-light\" to='/logout'>Logout</Link>\n                        <Link className=\"nav-link text-light disabledCursor\" style={{fontWeight: 'bold'}}>&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;Connection: {props.ip}</Link>\n                        {apiStatus ? <Link className=\"nav-link text-light disabledCursor\" style={{fontWeight: 'bold'}}>API Reachable: &nbsp;<span><div className=\"fa fa-circle env-row-text\"></div></span></Link> \n                        :  \n                        <Link className=\" env-row-text-warn nav-link text-light disabledCursor\" style={{fontWeight: 'bold'}}><span >API Unreachable</span></Link>}\n                        {props.fetchingStatus ? <Link className=\"nav-link text-light disabledCursor\" style={{fontWeight: 'bold'}}>Polling Status: &nbsp;&nbsp;<div className=\"fa fa-circle env-row-text\"></div></Link>: \n                            <Link className=\"nav-link text-light\"style={{fontWeight: 'bold'}} >Polling Status: &nbsp;&nbsp;<span><div className=\"fa fa-circle env-row-text-warn disabledCursor\"></div></span></Link>\n                            }\n                    </Nav>\n                    </Navbar.Collapse>\n                </Container>\n            </Navbar>\n            </Row>\n                \n  }\n  ","import axios from 'axios';\r\n\r\n\r\nexport function ApiCheck() {\r\n  return new Promise(resolve => {\r\n    setTimeout(() => {\r\n      resolve(axios.post('/apistatus'));\r\n    }, 5000);\r\n  });\r\n}\r\n\r\n\r\n\r\n ","import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport {encytpKey}  from '../../App'\nimport {Navigation}  from './navbar'\nimport {useRecoilState} from 'recoil';\nimport {AES, enc}from 'crypto-js';\n\n\nexport  function RestConfig(props){\n    const [decrypt] = useRecoilState(encytpKey);\n    const passwordDecrypt = AES.decrypt(localStorage.getItem('password'), decrypt);\n    const [update, setUpdate] = useState(0)\n    const [model, updateModel] = useState(undefined)\n    const [loading, updateLoading] = useState(false)\n    const url = useRef(undefined)\n    const errorRef = useRef(false)\n    const xpathHistory = useRef([])\n    const pythonPath = useRef([])\n    const pythonStrPath = useRef('{PythonVar}')\n    const leafs = useRef(false)\n    const parentKey = useRef(false)\n    const config = useRef(false)\n    const avaiableUrls = useRef(['Cisco-IOS-XE-arp-oper:arp-data', 'openconfig-platform-transceiver:transceiver', 'Cisco-IOS-XE-interfaces-oper:interfaces',\n                                 'Cisco-IOS-XE-native:native', 'Cisco-IOS-XE-process-cpu-oper:cpu-usage',\n                                'Cisco-IOS-XE-platform-software-oper:cisco-platform-software',\n                                'Cisco-IOS-XE-environment-oper:environment-sensors', 'openconfig-platform:components',\n                                'Cisco-IOS-XE-ospf-oper:ospf-oper-data/ospf-state', 'Cisco-IOS-XE-matm-oper:matm-oper-data',\n                                'Cisco-IOS-XE-spanning-tree-oper:stp-details', 'Cisco-IOS-XE-cdp-oper:cdp-neighbor-details',\n                                'Cisco-IOS-XE-lldp-oper:lldp-entries', 'Cisco-IOS-XE-vlan-oper:vlans', 'Cisco-IOS-XE-bgp-oper:bgp-state-data',\n                                'Cisco-IOS-XE-hsrp-oper:hsrp-oper-data',' Cisco-IOS-XE-matm-oper:matm-oper-data'])\n    \n    const previousSelection = async () => {\n\n        if(xpathHistory.current.length !== 0)\n            if (xpathHistory.current.length === 1){\n                updateLoading(true)\n\n                            axios.post('/query', \n\n                            { 'ip': localStorage.getItem('ip'), \n                            'username': localStorage.getItem('username'), \n                            'password': passwordDecrypt.toString(enc.Utf8), \n                            'port': 443, 'url': url.current},\n                            {'headers': { 'Authorization': 'Bearer ' + localStorage.getItem('token')}}).then(response => {\n\n                            pythonStrPath.current = '{PythonVar}'\n                            xpathHistory.current.push(url.current);\n                            config.current = JSON.parse(response.data.config)\n                            parentKey.current = response.data.parent\n                            leafs.current = response.data.data\n\n                            updateLoading(false)\n\n                            }).catch(error => {\n                                errorRef.current = true\n                                updateLoading(false)\n                            });\n            }\n            else{\n                let previousUrl = xpathHistory.current[xpathHistory.current.length - 2];\n                updateLoading(true)\n                axios.post('/query', \n\n                            { 'ip': localStorage.getItem('ip'), \n                            'username': localStorage.getItem('username'), \n                            'password': passwordDecrypt.toString(enc.Utf8), \n                            'port': 443, 'url': previousUrl},\n                            {'headers': { 'Authorization': 'Bearer ' + localStorage.getItem('token')}}).then(response => {\n\n                            pythonStrPath.current = pythonPath.current[pythonPath.current.length - 2];\n                            config.current = JSON.parse(response.data.config)\n                            parentKey.current = response.data.parent\n                            leafs.current = response.data.data\n                            xpathHistory.current.pop();\n                            pythonPath.current.pop();\n                            \n                            url.current = previousUrl\n                            updateLoading(false)\n\n                            }).catch(error => {\n                                errorRef.current = true\n                                updateLoading(false)\n                            });\n            }\n    };\n\n    const queryData = uri => {\n        updateLoading(true);\n        if(update !== 0){\n          axios.post('/query', \n\n            { 'ip': localStorage.getItem('ip'), \n            'username': localStorage.getItem('username'), \n            'password': passwordDecrypt.toString(enc.Utf8), \n            'port': 443, 'url': uri},\n            {'headers': { 'Authorization': 'Bearer ' + localStorage.getItem('token')}}).then(response => {\n\n                if (response.data.status === 404){\n                alert(\"404 Not Found\")\n                updateLoading(false)\n            }\n            else if (response.data.status === 500){\n                alert(\"End of the road\")\n                updateLoading(false)\n            }\n            else{\n                xpathHistory.current.push(uri);\n                config.current = JSON.parse(response.data.config)\n                parentKey.current = response.data.parent\n                leafs.current = response.data.data\n                url.current = uri\n                updateLoading(false)\n            }\n            \n          }).catch(error => {\n              errorRef.current = true\n              updateLoading(false)\n          });\n        }\n      }\n\n    const buildUri = nextPath => {\n\n        updateLoading(true)\n        const nextUrl = url.current + '/' + nextPath\n\n          axios.post('/query', \n\n            { 'ip': localStorage.getItem('ip'), \n            'username': localStorage.getItem('username'), \n            'password': passwordDecrypt.toString(enc.Utf8), \n            'port': 443, 'url': nextUrl}, {'headers': { 'Authorization': 'Bearer ' + localStorage.getItem('token')}}).then(response => {\n\n            if (response.data.status === 404){\n\n                let index = leafs.current.indexOf(nextPath);\n                let urlWithFilter = xpathHistory.current[xpathHistory.current.length - 1] + '=' + encodeURIComponent(nextPath) + '/';\n\n                axios.post('/query', { 'ip': localStorage.getItem('ip'), \n                    'username': localStorage.getItem('username'), \n                    'password': passwordDecrypt.toString(enc.Utf8), \n                    'port': 443, 'url': urlWithFilter},{'headers': { 'Authorization': 'Bearer ' + localStorage.getItem('token')}}).then(response => {\n\n                    if (response.data === 500 || response.status === 404){\n                        alert(\"No Data Returned\")\n                        updateLoading(false)\n                    }\n                    else{\n                        pythonStrPath.current = pythonStrPath.current + '.get(\\'' + nextPath + '\\')'\n                        xpathHistory.current.push(urlWithFilter);\n                        pythonPath.current.push(pythonPath.current  + '[' + index + ']');\n                        config.current = JSON.parse(response.data.config)\n                        parentKey.current = response.data.parent\n                        leafs.current = response.data.data\n                        url.current = urlWithFilter\n                        updateLoading(false)\n                    }\n\n            }).catch(error => {\n              errorRef.current = true\n              updateLoading(false)\n          });\n            }\n            else if (response.data.status === 500 || response.data.status === 404){\n                alert(\"No Data Returned\")\n                updateLoading(false)\n            }\n            else{\n                pythonStrPath.current = pythonStrPath.current + '.get(\\'' + nextPath + '\\')'\n                pythonPath.current.push(pythonStrPath.current);\n                xpathHistory.current.push(nextUrl);\n                config.current = JSON.parse(response.data.config)\n                parentKey.current = response.data.parent\n                leafs.current = response.data.data\n                url.current = nextUrl\n                updateLoading(false)\n            }\n            \n          }).catch(error => {\n              errorRef.current = true\n              updateLoading(false)\n          });\n      }\n\n    const handleSubmit = e => {\n        e.preventDefault()\n        pythonStrPath.current = '{PythonVar}'\n        let url = 'https://'+ localStorage.getItem('ip')  + ':443/restconf/data/' + model;\n        queryData(url)\n      }\n    \n    const handleChange = e => {\n        console.log('ff')\n        updateModel(e.target.value)\n    }\n\n    useEffect(() => {\n        if(update === 0){\n          let render = update + 1\n          setUpdate(render)\n        }\n      }, [])\n\n    if(url.current !== undefined){\n\n        return  <div className=\"container-fluid\">\n                    <Navigation ip={localStorage.getItem('ip')}/>\n                    <div className=\"row\">\n                        <div className=\"col-4\">\n                            <div className=\"card text-white mt-3 bg-dark\">\n                                <div className=\"card-body\">\n                                    <div className=\"row\">\n                                        <form onSubmit={handleSubmit}>\n                                            <div className=\"form-group row\">\n                                                <h5> Model:</h5>\n                                                <div className=\"col-12\">\n                                                    <select name=\"model\" value={model} onChange={handleChange}>\n                                                    <option >Select...</option>\n                                                        {\n                                                        avaiableUrls.current.map(option => (\n                                                            <option key={option} value={option}>{option}</option>\n                                                        ))\n                                                        }\n                                                    </select>\n                                                </div>\n                                            </div>\n                                            <input type=\"submit\" value=\"Submit\" className=\"btn btn-sm btn-primary mt-3\"/>\n                                        </form> \n                                        </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-8\">\n                            <div className=\"card text-white mt-3 bg-dark\">\n                                <div className=\"card-body\" style={{textAlign: 'left'}}>\n                                <div className=\"row\" >\n                                    <div className=\"col-3\">\n                                        <button style={{marginBottom: '15px', fontWeight: 'bold'}} className=\"btn btn-success btn-md\" onClick={(e) => previousSelection(e)}>Previous URI</button>\n                                    </div>\n                                </div>\n                                {loading ? <div className=\"overlay\" onclick=\"off()\" style={{display: \"flex\", justifyContent: \"center\"}}><div className='row'><div style={{marginTop: 300}} classname=\"spinner\"></div></div></div>: <div/>}\n                                <div className=\"row\">\n                                    <h5 style={{color: \"yellow\", fontWeight: 'bold'}}>Current Path: </h5><h5 key={'currentpath'}className=\"fade-in\" >{url.current}</h5>\n                                </div>\n                                <div className=\"row\">\n                                    <h5 style={{color: \"yellow\", fontWeight: 'bold'}}>Python Path: </h5><h5 key={'currentpath'}className=\"fade-in\" >{pythonStrPath.current}</h5>\n                                </div>\n                                    <div className='row'>\n                                            <div className=\"col-12\">\n                                                { leafs.current.map((key, index) => (\n                                                    <button key={key + index} style={{marginRight: '3px'}} className=\"btn btn-success fade-in mb-3\" onClick={(e) => buildUri(key, e)}>{key}</button>\n                                                ))\n                                                }\n                                            </div>\n                                        </div>\n                                    <div className='row'>\n                                        <div className=\"col-12\">\n                                            <pre  className=\"fade-in\" key={'test'} style={{fontWeight:'bold', textAlign: 'left'}}>{JSON.stringify(config.current, null, 2)}</pre>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n    }\n      else{\n        return <div className=\"container-fluid\">\n                    <Navigation ip={localStorage.getItem('ip')}/>\n                        <div className=\"row\">\n                            <div className=\"col-4\">\n                                <div className=\"card text-white mt-3 bg-dark\">\n                                    <div className=\"card-body\">\n                                        <div className=\"row\">\n                                            <form onSubmit={handleSubmit}>\n                                                <div className=\"form-group row\">\n                                                    <h5> Model:</h5>\n                                                    <div className=\"col-12\">\n                                                        <select name=\"model\" value={model} onChange={handleChange}>\n                                                            <option >Select...</option>\n                                                            {\n                                                            avaiableUrls.current.map(option => (\n                                                                <option key={option} value={option}>{option}</option>\n                                                            ))\n                                                            }\n                                                        </select>\n                                                    </div>\n                                                </div>\n                                                <input type=\"submit\" value=\"Submit\" className=\"btn btn-sm btn-primary mt-3\"/>\n                                            </form> \n                                         </div>\n                                    </div>\n                                </div>\n                            </div>\n                           <div className=\"col-8\">\n\t\t             <div clssName=\"card bg-dark\">\n\t\t\t        <div className=\"card-body\">\n                                   {loading ? <div className=\"overlay\" onclick=\"off()\" style={{display: \"flex\", justifyContent: \"center\"}}><div className='row'><div style={{marginTop: 300}} classname=\"spinner\"></div></div></div>: <div/>}\n                                </div>\n                             </div>\n                           </div> \n                       </div>\n\n                    </div>\n\n      }                          \n}\n        \n    \n","import React, { useEffect } from 'react';\r\nimport Tabs from \"react-bootstrap/Tabs\";\r\nimport Tab from \"react-bootstrap/Tab\";\r\nimport { Ipv4RibTableHtml, Ipv6RibTableHtml } from '../Other/chartConfigs';\r\nimport { Ipv4Ribs, Ipv6Ribs } from '../Other/tables';\r\nconst $ = require('jquery');\r\n$.DataTable = require('datatables.net');\r\n\r\nexport  function RibInfo(props){\r\n  const ipv4RibTableRef = React.createRef()\r\n  const ipv6RibTableRef = React.createRef()\r\n  const ipv4IntTable = Ipv4RibTableHtml(ipv4RibTableRef)\r\n  const ipv6IntTable = Ipv6RibTableHtml(ipv6RibTableRef)\r\n  $.fn.dataTable.ext.errMode = 'none';\r\n  \r\n  useEffect(() => {\r\n\r\n    if(ipv4RibTableRef.current !== null){\r\n      try{\r\n        $(ipv4RibTableRef.current).DataTable().clear()\r\n        $(ipv4RibTableRef.current).DataTable().rows.add(props.routes['ietf-routing:ipv4'])\r\n        $(ipv4RibTableRef.current).DataTable().draw(false)\r\n\r\n        $(ipv6RibTableRef.current).DataTable().clear()\r\n        $(ipv6RibTableRef.current).DataTable().rows.add(props.routes['ietf-routing:ipv6'])\r\n        $(ipv6RibTableRef.current).DataTable().draw(false)\r\n      }\r\n      catch{}\r\n    }\r\n  \r\n    }, [props.routes])\r\n\r\n\r\n  useEffect(() => {\r\n    $(ipv4RibTableRef.current).DataTable().destroy()\r\n    Ipv4Ribs(ipv4RibTableRef.current, props.routes['ietf-routing:ipv4'])\r\n    $(ipv6RibTableRef.current).DataTable().destroy()\r\n    Ipv6Ribs(ipv6RibTableRef.current, props.routes['ietf-routing:ipv6'])\r\n\r\n  }, [])\r\n\r\n  return <Tabs defaultActiveKey=\"ipv4\" id=\"uncontrolled-tab-example\" className=\"mt-3 mb-3\">\r\n            <Tab eventKey=\"ipv4\" title=\"IPv4\">\r\n                {ipv4IntTable}\r\n            </Tab>\r\n            <Tab eventKey=\"ipv6\" title=\"IpV6\">\r\n              {ipv6IntTable}\r\n            </Tab>\r\n          </Tabs>\r\n  \r\n  };\r\n","import React, { useEffect } from 'react';\r\nimport { PlusRibEntriesTableHtml } from '../Other/chartConfigs';\r\nimport { RibDiffData } from '../Other/tables';\r\nconst $ = require('jquery');\r\n$.DataTable = require('datatables.net');\r\n\r\nexport  function RibDiff(props){\r\n  const ribDiffEntries = React.createRef()\r\n  const plusEntriesTable = PlusRibEntriesTableHtml(ribDiffEntries)\r\n  console.log(props.ribs)\r\n  \r\n  useEffect(() => {\r\n\r\n    if(ribDiffEntries.current !== null){\r\n\r\n      try{\r\n        $(ribDiffEntries.current).DataTable().clear()\r\n        $(ribDiffEntries.current).DataTable().rows.add(props.ribs)\r\n        $(ribDiffEntries.current).DataTable().draw(false)\r\n      }\r\n      catch{}\r\n\r\n    }\r\n  \r\n    }, [props.ribs])\r\n\r\n\r\n  useEffect(() => {\r\n      $(ribDiffEntries.current).DataTable().destroy()\r\n      RibDiffData(ribDiffEntries.current, props.ribs)\r\n  }, [])\r\n\r\n\r\n    return  plusEntriesTable\r\n                        \r\n  };\r\n","import React, { useEffect } from 'react';\r\nimport { ProtocolsTableHtml } from '../Other/chartConfigs';\r\nimport { RoutingProtocolData } from '../Other/tables';\r\nconst $ = require('jquery');\r\n$.DataTable = require('datatables.net');\r\n\r\nexport  function RoutingProtocols(props){\r\n  const routingProtocolsRef = React.createRef()\r\n  const routingProtocolsTable = ProtocolsTableHtml(routingProtocolsRef)\r\n  \r\n  useEffect(() => {\r\n      $(routingProtocolsRef.current).DataTable().destroy()\r\n      RoutingProtocolData(routingProtocolsRef.current, props.protocols)\r\n          \r\n  }, [])\r\n\r\n    return routingProtocolsTable\r\n                         \r\n \r\n  };\r\n","import axios from 'axios';\nimport { useQuery } from 'react-query';\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport {AES, enc} from 'crypto-js';\nimport {useRecoilState} from 'recoil';\nimport { Navigation } from '../Other/navbar';\nimport { RibInfo} from './getRibs';\nimport { RibDiff} from './ribDiff';\nimport { RoutingProtocols} from './protocols';\nimport {encytpKey}  from '../../App'\nimport { CreateCard } from '../Other/jsxCard';\nimport { NavigationFallback } from \"../Other/navbarError\";\nimport { ErrorBoundary } from  'react-error-boundary'\nimport { PageLoader } from '../Other/pageLoader';\nconst $ = require('jquery');\n$.DataTable = require('datatables.net');\n\n\nexport function RibIndex(){\n    const [decrypt] = useRecoilState(encytpKey);\n    const passwordDecrypt = AES.decrypt(localStorage.getItem('password'), decrypt);\n    const { isLoading, error, data, isFetching  } = useQuery(localStorage.getItem('ip') + 'ribStatus', async () => {\n      \n        const response = await axios.post('/ribStatus',{'ip': localStorage.getItem('ip'), 'username': localStorage.getItem('username'), \n        'password': passwordDecrypt.toString(enc.Utf8), 'port': localStorage.getItem('port')}, {'headers': { 'Authorization': 'Bearer ' + localStorage.getItem('token')}})\n        \n        return response.data\n\n        },\n        {\n        refetchInterval: 10000,\n        }\n  )\n  \n  if (error){\n    return  <div>\n                <ErrorBoundary FallbackComponent={NavigationFallback}>\n                  <Navigation update={data} ip={localStorage.getItem('ip')} fetchingStatus={isFetching}/>\n                </ErrorBoundary>\n                <h4 classname=\"text-center fade-in\" style={{marginTop: 100}}>Error Collecting Data. I'll Keep Trying</h4>\n                <div classname=\"warning-loader text-center\"></div>\n            </div>\n    }\n    else if (data){\n        return <Container fluid>\n                    <ErrorBoundary FallbackComponent={NavigationFallback}>\n                          <Navigation update={data} ip={localStorage.getItem('ip')} fetchingStatus={isFetching} cpu={data.cpu} mem={data.mem}/>\n                    </ErrorBoundary>\n                    {CreateCard(<RibInfo routes={data.ribsEntries}/>)}\n                    <Row>\n                        <Col xl={6}>\n                            {CreateCard(<RoutingProtocols protocols={data.protocols}/>, \"Protocols\")}\n                        </Col>\n                        <Col xl={6}>\n                            {CreateCard(<RibDiff ribs={data.flaps.routes}/>, 'Flapping Routes')}\n                        </Col>\n                    </Row>\n                </Container>\n    }\n    else if (isLoading){\n        return  <div>\n                    {PageLoader(localStorage.getItem('ip'), localStorage.getItem('serial'), localStorage.getItem('model'), localStorage.getItem('uptime'), localStorage.getItem('software'))}\n                </div>\n    }\n\n    }\n\n\n\n      \n","import React, { useState } from 'react';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport {useRecoilState} from 'recoil';\r\nimport { Login } from './promises'\r\nimport { AES }from 'crypto-js';\r\nimport {encytpKey}  from '../../App'\r\n\r\n\r\nexport function DeviceAuth(props){\r\n    const [encrypt] = useRecoilState(encytpKey);\r\n    const [loading, setloading] = useState(false);\r\n    const [ip, setIp] = useState('')\r\n    const [username, setUserNaMe] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [port, setPort] = useState(443)\r\n    const [isAuth, setAuth] = useState(false)\r\n \r\n    const handleSubmit = async (evt) => {\r\n        evt.preventDefault();\r\n        localStorage.clear();\r\n        try{\r\n            let response = await Login(ip, username, password)\r\n            console.log(response)\r\n            if(response.data.status === 200){\r\n                \r\n                const encryptPassword = AES.encrypt(password, encrypt);\r\n                localStorage.setItem('ip', ip);\r\n                localStorage.setItem('port', 443);\r\n                localStorage.setItem('username', username);\r\n                localStorage.setItem('password', encryptPassword.toString());\r\n                localStorage.setItem('model', response.data.model);\r\n                localStorage.setItem('serial', response.data.serial);\r\n                localStorage.setItem('uptime', response.data.uptime);\r\n                localStorage.setItem('software', response.data.software);\r\n                setAuth(true)\r\n            }\r\n            else{\r\n                alert('Login Failed')\r\n                setloading(false)\r\n            }\r\n        }\r\n        catch(e){\r\n            alert('Login Failed')\r\n            setloading(false)\r\n        } \r\n    }\r\n\r\n    if(!isAuth){\r\n        return (\r\n            <Container fluid=\"xl\">\r\n                <Row style={{alignItems: 'center', marginTop: \"100px\"}}>\r\n                    <Col xl={4}/>\r\n                    <Col xl={4}>\r\n                    <Card>\r\n                        <Card.Body>\r\n                            <Card.Title style={{color: 'black', textAlign: 'center'}}>IOS-XE Login</Card.Title>\r\n                                <br/>\r\n                                {loading ? <div className=\"overlay\" onclick=\"off()\" style={{display: \"flex\", justifyContent: \"center\"}}><div className='row'><p></p><div className=\"spinner\"></div></div></div>: <div/>}\r\n                                <form onSubmit={handleSubmit}>\r\n                                    <input  type=\"text\" className=\"form-control input-text\" value={ip} onChange={e => setIp(e.target.value)} placeholder=\"IP Address\" name=\"ipAddress\" required/>\r\n                                    <br/>\r\n                                        <input type=\"text\" className=\"form-control input-text\" value={username} onChange={e => setUserNaMe(e.target.value)} placeholder=\"Username\" name=\"username\" required/>\r\n                                    <br/>\r\n                                        <input  type=\"text\" className=\"form-control input-text\" value={password} onChange={e => setPassword(e.target.value)} placeholder=\"Password\" name=\"password\" required/>\r\n                                    <br/>\r\n                                        <input  type=\"text\" className=\"form-control input-text\" value={port} onChange={e => setPort(e.target.value)} placeholder=\"Default 443\" name=\"restconfPort\" />\r\n                                    <br/>\r\n                                    <input  onClick={() => setloading(true)} style={{marginTop: '30px', marginBottom: '30px'}} type=\"submit\" value=\"Login\" className=\"btn btn-primary\"/>\r\n                                    <br/>\r\n                        </form>\r\n                        </Card.Body>\r\n                    </Card>\r\n                    </Col>\r\n                    <Col xl={4}/>\r\n                    </Row>\r\n                </Container>\r\n            );\r\n        }\r\n        else if(isAuth){\r\n            return(\r\n            <Redirect push to={{pathname: '/index'}} from='/login'/>\r\n            )\r\n        }\r\n    }","import React, { useEffect } from 'react';\r\nimport { SlaTableHtml } from '../Other/chartConfigs';\r\nimport { IpSlaData } from '../Other/tables';\r\nconst $ = require('jquery');\r\n$.DataTable = require('datatables.net');\r\n\r\nexport  function SlaStats(props){\r\n  const slaTableRef = React.createRef()\r\n  const slaTable = SlaTableHtml(slaTableRef)\r\n  $.fn.dataTable.ext.errMode = 'none';\r\n\r\n  \r\n  useEffect(() => {\r\n    if(slaTableRef.current !== null){\r\n      try{\r\n        $(slaTableRef.current).DataTable().clear()\r\n        $(slaTableRef.current).DataTable().rows.add(props.slas)\r\n        $(slaTableRef.current).DataTable().draw(false)\r\n      }\r\n      catch{}\r\n    }\r\n\r\n    }, [props.slas])\r\n\r\n\r\n  useEffect(() => {\r\n\r\n        $(slaTableRef.current).DataTable().destroy()\r\n        IpSlaData(slaTableRef.current, props.slas)\r\n       \r\n}, [])\r\n\r\n  return slaTable\r\n              \r\n  }\r\n  ","\r\nimport router from '../Images/router.png';\r\nimport { Network } from \"vis-network\";\r\n\r\nvar font = { size: 15, strokeWidth: 0, color: 'white'}\r\nvar arrowEnabled = {enabled: true}\r\nvar nodeFont = { size: 16, color: \"white\"}\r\nvar options = {\r\n  nodes: {\r\n    shape: 'image',\r\n    image: router,\r\n    size: 35,\r\n    color: {\r\n      border: 'black',\r\n      background: '#166F20',\r\n      highlight: {\r\n        border: '#2B7CE9',\r\n        background: '#D2E5FF'\r\n          }\r\n        }\r\n      },\r\n    layout: {\r\n      randomSeed: undefined,\r\n      improvedLayout:true,\r\n      clusterThreshold: 150,\r\n      hierarchical: {\r\n        enabled:true,\r\n        levelSeparation: 500,\r\n        treeSpacing: 150,\r\n        edgeMinimization: true,\r\n        parentCentralization: true,\r\n        direction: 'RL',        // UD, DU, LR, RL\r\n        sortMethod: 'hubsize',  // hubsize, directed\r\n        shakeTowards: 'roots'  // roots, leaves\r\n          }\r\n      },\r\n      physics:{\r\n      enabled: true,\r\n      hierarchicalRepulsion: {\r\n        centralGravity: 0.0,\r\n        springLength: 0,\r\n        springConstant: 0.01,\r\n        nodeDistance: 200,\r\n        damping: 1,\r\n        avoidOverlap: 1\r\n      },\r\n    },\r\n\r\n}\r\n\r\nexport function UpdateIpSlaTopology(ref, sla, localIp){\r\n\r\n    \r\n    if(sla['latest-return-code'] !== 'ret-code-ok'){\r\n        ref.body.data.edges.update({id: 2000,\r\n                        from: 1, \r\n                        to: localIp, \r\n                        color: 'yellow', \r\n                        label: 'Latest: ' + sla['latest-return-code'] + '\\nSuccess: ' +sla['success-count'] +  '\\nFailures: ' + sla['failure-count'], \r\n                        })\r\n    }\r\n    else{\r\n        ref.body.data.edges.update({id: 2000,\r\n            from: 1, \r\n            to: localIp, \r\n            color: 'green', \r\n            label: 'Latest: ' + sla['latest-return-code'] + '\\nSuccess: ' +sla['success-count'] + '\\nFailures: ' + sla['failure-count'],  \r\n        })\r\n    }\r\n    \r\n    return  ref\r\n\r\n    }\r\n\r\n\r\n\r\nexport function IpSlaTopologyBuild(ref, sla, localIp){\r\n\r\n    const nodes = []\r\n    const edges = []\r\n\r\n    nodes.push({id: 1, label: 'Responder', font: nodeFont})\r\n    nodes.push({id: localIp, label: localIp, font: nodeFont})\r\n\r\n    \r\n    if(sla['latest-return-code'] !== 'ret-code-ok'){\r\n        edges.push({id: 2000,\r\n                        from: 1, \r\n                        to: localIp, \r\n                        color: 'yellow', \r\n                        label: 'Latest: ' + sla['latest-return-code'] +  '\\nSuccess: ' +sla['success-count'] + '\\nFailures: ' + sla['failure-count'], \r\n                        font: font, \r\n                        arrows:{from: arrowEnabled}\r\n        })\r\n    }\r\n    else{\r\n        edges.push({id: 2000,\r\n            from: 1, \r\n            to: localIp, \r\n            color: 'green', \r\n            label: 'Latest: ' + sla['latest-return-code'] + '\\nSuccess: ' +sla['success-count'] + '\\nFailures: ' + sla['failure-count'], \r\n            font: font, \r\n            arrows:{from: arrowEnabled}\r\n        })\r\n    }\r\n\r\n\r\n    var data = {\r\n      nodes: nodes,\r\n      edges: edges,\r\n    };\r\n\r\n    var network = new Network(ref, data, options);\r\n    \r\n    return  network\r\n\r\n    }\r\n\r\n","import React, { useEffect, useRef } from 'react';\r\nimport { IpSlaTopologyBuild, UpdateIpSlaTopology } from './topology';\r\nconst $ = require('jquery');\r\n$.DataTable = require('datatables.net');\r\n\r\nexport  function BuildSlaTopologies(props){\r\n  const slaTopologyRef = React.createRef()\r\n  const slaTopology = useRef()\r\n  $.fn.dataTable.ext.errMode = 'none';\r\n\r\n  useEffect(() => {\r\n      try{\r\n        slaTopology.current = UpdateIpSlaTopology(slaTopology.current, props.sla, props.localIp)\r\n        slaTopologyRef.current =  slaTopology.current\r\n      }\r\n      catch(e){console.log(e)}\r\n      \r\n    }, [props.sla])\r\n\r\n  useEffect(() => {\r\n\r\n    try{\r\n        slaTopology.current = IpSlaTopologyBuild(slaTopologyRef.current, props.sla, props.localIp)\r\n        slaTopologyRef.current =  slaTopology.current\r\n      }\r\n      catch{}\r\n}, [])\r\n\r\n  return  <div ref={slaTopologyRef} className=\"bg-dark\" style={{width: '100%', height: '300px'}}/>\r\n               \r\n  }\r\n  ","import React from 'react';\nimport axios from 'axios';\nimport Container from \"react-bootstrap/Container\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport {useRecoilState} from 'recoil';\nimport { Navigation } from '../Other/navbar'\nimport { SlaStats } from './ipslastats'\nimport { BuildSlaTopologies } from './slatopologies'\nimport { useQuery } from 'react-query';\nimport { ErrorBoundary } from  'react-error-boundary'\nimport {AES, enc}from 'crypto-js';\nimport {encytpKey}  from '../../App'\nimport { CreateCard } from '../Other/jsxCard';\nimport { NavigationFallback } from \"../Other/navbarError\";\nimport { PageLoader } from '../Other/pageLoader';\n\nexport  function IpSlas(){\n  const [decrypt] = useRecoilState(encytpKey);\n  const passwordDecrypt = AES.decrypt(localStorage.getItem('password'), decrypt);\n  const { isLoading, error, data, isFetching } = useQuery(localStorage.getItem('ip') + 'getipsla', async () => {\n        const data = await axios.post('/getipsla', {'ip': localStorage.getItem('ip'), 'username': localStorage.getItem('username'), \n        'password':  passwordDecrypt.toString(enc.Utf8), 'port': localStorage.getItem('port')})\n\n        return data.data\n\n        },\n        {\n          refetchInterval: 5000\n        }\n        )\n\n        if (error){\n          return  <div>\n                  <ErrorBoundary FallbackComponent={NavigationFallback}>\n                    <Navigation update={data} ip={localStorage.getItem('ip')} fetchingStatus={isFetching}/>\n                  </ErrorBoundary>\n                      <h4 classname=\"text-center fade-in\" style={{marginTop: 100}}>Error Collecting Data. I'll Keep Trying</h4>\n                      <div classname=\"warning-loader text-center\"></div>\n                  </div>\n  }\n  else if (data){\n          return <Container fluid>\n                      <ErrorBoundary FallbackComponent={NavigationFallback}>\n                          <Navigation update={data} ip={localStorage.getItem('ip')} fetchingStatus={isFetching} cpu={data.cpu} mem={data.mem}/>\n                      </ErrorBoundary>\n                    <Row>\n                        {CreateCard(<SlaStats slas={data.slas}/>, \"IP SLAs\")}\n                    </Row>\n                    <Row>\n                        { data.slas.map(sla => (\n                            <Col xl>\n                              <ErrorBoundary>\n                               {CreateCard(<BuildSlaTopologies sla={sla} localIp={localStorage.getItem('ip')}/>, \"SLA ID: \" + sla['oper-id'])}\n                              </ErrorBoundary>\n                          </Col>\n                        ))}\n                        </Row>\n                  </Container>\n  }\n  else if (isLoading){\n    return  <div>\n              {PageLoader(localStorage.getItem('ip'), localStorage.getItem('serial'), localStorage.getItem('model'), localStorage.getItem('uptime'), localStorage.getItem('software'))}\n            </div>\n  }\n\n}\n    \n  ","import React, { useEffect, useRef } from 'react';\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport { InitialChartBuild, UpdateChart } from '../Other/chartConfigs';\r\nconst $ = require('jquery');\r\n$.DataTable = require('datatables.net');\r\n\r\n\r\nexport  function InterfaceCard(props){\r\n  const interfacesChart = useRef(null)\r\n  const interfacesRef = React.createRef()\r\n  $.fn.dataTable.ext.errMode = 'none';\r\n\r\n  useEffect(() => {\r\n    if(interfacesChart.current !== null){\r\n      try{\r\n        let updatedChart = UpdateChart(interfacesChart.current, parseInt(props.value['statistics']['tx-kbps']),parseInt(props.value['statistics']['rx-kbps']));\r\n        updatedChart.update()\r\n        interfacesChart.current = updatedChart\r\n      }\r\n      catch{}\r\n    }\r\n    \r\n  }, [props.value])\r\n  \r\n\r\n  useEffect(() => {\r\n    try{\r\n      let chart = InitialChartBuild(interfacesRef.current.getContext('2d'), parseInt(props.value['statistics']['tx-kbps']), parseInt(props.value['statistics']['rx-kbps']));\r\n      interfacesChart.current = chart\r\n    }\r\n    catch{}\r\n  }, [])\r\n\r\n\r\nreturn      <div><Row>\r\n              <canvas ref={interfacesRef} height=\"300px\"/>\r\n            </Row>\r\n            <br/>\r\n              <Row div className=\"row\">\r\n                  <Col xl={6}>\r\n                    <p className=\"card-text\">Speed: {Math.round(parseInt(props.value.speed) / 1000000000) * 1000 } (Mbps)</p>\r\n                    <p className=\"card-text\">Status: {props.value['oper-status']}</p>\r\n                    <p className=\"card-text\">IP: {props.value.ipv4}-{props.value['ipv4-subnet-mask']}</p>\r\n                    <p className=\"card-text\">Descr: {props.value.description}</p>\r\n                    <p className=\"card-text\">MTU: {props.value.mtu}</p>\r\n                    <p className=\"card-text\">Mbps Out: {props.value['statistics']['tx-kbps']}</p>\r\n                    <p className=\"card-text\">Mbps In: {props.value['statistics']['rx-kbps']}</p>\r\n                    <p className=\"card-text\">PPs Out: {props.value['statistics']['rx-pps']}</p>\r\n                    <p className=\"card-text\">PPs In: {props.value['statistics']['tx-pps']}</p>\r\n                  </Col>\r\n                  <Col xl={6}>\r\n                    <p className=\"card-text\">InDis: {props.value['statistics']['in-discards']}</p>\r\n                    <p className=\"card-text\">OutDis: {props.value['statistics']['out-discards']}</p>\r\n                    <p className=\"card-text\">InErr: {props.value['statistics']['in-errors']}</p>\r\n                    <p className=\"card-text\">InDis: {props.value['statistics']['out-errors']}</p>\r\n                    <p className=\"card-text\">CRC: {props.value['statistics']['in-crc-errors']}</p>\r\n                    <p className=\"card-text\">InDis: {props.value['statistics']['num-flaps']}</p>\r\n                    <p className=\"card-text\">LastChange: {props.value['statistics']['discontinuity-time'].split('.')[100]}</p>\r\n                    <p className=\"card-text\">Qos/Direction: {props.qos['policy']} - {props.qos['direction']}</p>\r\n                  </Col>\r\n                </Row>\r\n                </div>\r\n\r\n  }\r\n  ","import React from 'react';\r\nimport { useQuery } from 'react-query'\r\nimport {encytpKey}  from '../../App'\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport axios from 'axios';\r\nimport {useRecoilState} from 'recoil';\r\nimport { InterfaceCard} from '../Index/interfaceCard'\r\nimport { Navigation } from '../Other/navbar';\r\nimport { CreateCard } from '../Other/jsxCard';\r\nimport { AES, enc }from 'crypto-js';\r\nimport { IsErrorFallback } from \"../Other/errorComponent\";\r\nimport { ErrorBoundary } from  'react-error-boundary'\r\nimport { PageLoader } from '../Other/pageLoader';\r\n\r\nexport function LiveInterfaces(){\r\n  const [decrypt] = useRecoilState(encytpKey);\r\n  const passwordDecrypt = AES.decrypt(localStorage.getItem('password'), decrypt);\r\n  const { isLoading, error, data, isFetching } = useQuery(localStorage.getItem('ip') + 'liveinterfaces', async () => {\r\n  const data = await axios.post('/liveinterfaces', {'ip': localStorage.getItem('ip'), 'username': localStorage.getItem('username'), \r\n  'password': passwordDecrypt.toString(enc.Utf8), 'port': localStorage.getItem('port')})\r\n\r\n  return data.data\r\n\r\n  },\r\n  {\r\n    refetchInterval: 5000\r\n  }\r\n  )\r\n  console.log(data)\r\n  if (error){\r\n    return  <div>\r\n              <Navigation update={data} ip={localStorage.getItem('ip')} fetchingStatus={isFetching}/>\r\n              <h4 className=\"text-center fade-in\" style={{marginTop: 100}}>Error Collecting Data. I'll Keep Trying</h4>\r\n              <div className=\"warning-loader text-center\"></div>\r\n            </div>\r\n  }\r\n  else if (data){\r\n\r\n        return  <Container fluid>\r\n                        <ErrorBoundary  FallbackComponent={IsErrorFallback}>\r\n                          <Navigation update={data} ip={localStorage.getItem('ip')} fetchingStatus={isFetching} cpu={data.cpu} mem={data.mem}/>\r\n                          </ErrorBoundary>\r\n                        <Row>\r\n                            { Object.values(data.interfaces).map((value) => (\r\n                                <Col xl={4}>\r\n                                {CreateCard(<InterfaceCard key={value.interface} qos={value.qos} value={value.data}/>, value.interface)}\r\n                                </Col>\r\n                            ))}\r\n                        </Row>\r\n                  </Container>\r\n      }\r\n  else if (isLoading){\r\n\r\n    return <div>\r\n              {PageLoader(localStorage.getItem('ip'), localStorage.getItem('serial'), localStorage.getItem('model'), localStorage.getItem('uptime'), localStorage.getItem('software'))}\r\n            </div>\r\n  }\r\n\r\n\r\n  }\r\n    ","import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Index }  from './Components/Index/Index-Parent.js';\nimport { LayerTwo }  from './Components/LayerTwo/layerTwo-Parent.js';\nimport { Environment }  from './Components/Environment/Env-Parent.js';\nimport { Routing }  from './Components/LayerThree/Routing-Parent.js';\nimport { Dmvpn }  from './Components/DMVPN/Dmvpn-Parent.js';\nimport { RestConfig }  from './Components/Config/config.js';\nimport { RibIndex }  from './Components/RibStatus/RIB-Parent.js';\nimport { DeviceAuth }  from './Components/Other/login.js';\nimport { IpSlas }  from './Components/IPSlas/SlaParent.js';\nimport { LiveInterfaces }  from './Components/InterfaceGraphs/liveInterface.js';\nimport { RecoilRoot, atom } from 'recoil';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport { QueryClient, QueryClientProvider } from 'react-query';\n\nexport const encytpKey = atom({\n  key: 'key',\n  default: 'jdh%):Aap(3>S#', \n});\n\n\nconst queryClient = new QueryClient();\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n\n\n          <Route path=\"/index\">\n          <RecoilRoot>\n            <QueryClientProvider client={queryClient}>\n              <Index/>\n            </QueryClientProvider>\n          </RecoilRoot>\n          </Route>\n\n          <Route path=\"/layerTwo\">\n            <RecoilRoot>\n              <QueryClientProvider client={queryClient}>\n                <LayerTwo/>\n              </QueryClientProvider>\n            </RecoilRoot>\n          </Route>\n\n          <Route path=\"/routing\">\n            <RecoilRoot>\n              <QueryClientProvider client={queryClient}>\n              <Routing/>\n              </QueryClientProvider>\n            </RecoilRoot>\n          </Route>\n\n\n          <Route path=\"/config\">\n            <RecoilRoot>\n              <QueryClientProvider client={queryClient}>\n                <RestConfig/>\n              </QueryClientProvider>\n            </RecoilRoot>\n          </Route>  \n\n\n          <Route path=\"/dmvpn\">\n            <RecoilRoot>\n              <QueryClientProvider client={queryClient}>\n                <Dmvpn/>\n              </QueryClientProvider>\n            </RecoilRoot>\n          </Route>  \n\n\n          <Route path=\"/environment\">\n            <RecoilRoot>\n              <QueryClientProvider client={queryClient}>\n                <Environment/>\n              </QueryClientProvider>\n            </RecoilRoot>\n          </Route>\n\n          <Route path=\"/ribstatus\">\n            <RecoilRoot>\n              <QueryClientProvider client={queryClient}>\n                <RibIndex/>\n              </QueryClientProvider>\n            </RecoilRoot>\n          </Route>\n\n\t        <Route path=\"/ipslas\">\n            <RecoilRoot>\n              <QueryClientProvider client={queryClient}>\n                <IpSlas/>\n              </QueryClientProvider>\n            </RecoilRoot>\n          </Route>\n\n          <Route path=\"/live_interfaces\">\n          <RecoilRoot>\n              <QueryClientProvider client={queryClient}>\n                <LiveInterfaces/>\n              </QueryClientProvider>\n            </RecoilRoot>\n          </Route>\n\n\n\n          <Route path=\"/\">\n          <RecoilRoot>\n              <QueryClientProvider client={queryClient}>\n                <DeviceAuth/>\n              </QueryClientProvider>\n            </RecoilRoot>\n\t        </Route>\n\n\t        <Route path=\"/logout\">\n            <RecoilRoot>\n              <QueryClientProvider client={queryClient}>\n                <DeviceAuth/>\n              </QueryClientProvider>\n            </RecoilRoot>\n\t        </Route>\n\n        </Switch>\n    </Router>\n    </div>\n\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.js';\nimport { RecoilRoot, atom } from 'recoil';\n\nReactDOM.render(\n        <App />,\n  document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}